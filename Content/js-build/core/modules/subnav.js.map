{"version":3,"sources":["../../libs/jquery.waypoints-sticky.js","subnav.js"],"names":["console","log","root","factory","define","amd","jQuery","this","$","defaults","wrap","wrapper","stuckClass","$elements","options","parent","waypoints","opt","$wrap","originalHandler","extend","fn","waypoint","handler","direction","$sticky","shouldBeStuck","children","height","outerHeight","toggleClass","call","data","unwrap","removeClass","Modernizr","enquire","init","applyStickToSubnavOnDesktop","window","innerWidth","stickSubNav","removeClassesAndBodyPadding","close","$el","document","off","body","style","paddingTop","subnav","classList","remove","scrollY","spaceAboveSubnav","offsetHeight","add","querySelector","main","offsetTop","EFTOURS","device","isTouch","isMobile","hasClass","on","evt","$this","$parent","preventDefault","stopPropagation","addClass","event","target","parents","is","addEventListener"],"mappings":"AAAA,AAOAA,QAAAC,IAAA,UAEA,YACA,SAAAC,EAAAC,GACA,MAAA,kBAAAC,SAAAA,OAAAC,IACAD,OAAA,gCAAA,SAAA,aAAAD,GAEAA,EAAAD,EAAAI,SAEAC,KAAA,SAAAC,GACA,GAAAC,GAAAC,CA8BA,OA5BAD,IACAE,QAAA,iCACAC,WAAA,SAEAF,EAAA,SAAAG,EAAAC,GAEA,MADAD,GAAAH,KAAAI,EAAAH,SACAE,EAAAE,UAEAP,EAAAQ,UAAA,WAAA,SAAA,SAAAC,GACA,GAAAC,GAAAJ,EAAAK,CAiBA,OAfAL,GAAAN,EAAAY,UAAAZ,EAAAa,GAAAC,SAAAb,SAAAA,EAAAQ,GACAC,EAAAR,EAAAH,KAAAO,GACAK,EAAAL,EAAAS,QACAT,EAAAS,QAAA,SAAAC,GACA,GAAAC,GAAAC,CAMA,OAJAD,GAAAjB,EAAAD,MAAAoB,SAAA,UACAD,EAAA,SAAAF,GAAA,UAAAA,EACAN,EAAAU,OAAAF,EAAAD,EAAAI,cAAA,IACAJ,EAAAK,YAAAhB,EAAAF,WAAAc,GACA,MAAAP,EACAA,EAAAY,KAAAxB,KAAAiB,GADA,QAIAN,EAAAI,SAAAR,GACAP,KAAAyB,KAAA,aAAAlB,EAAAF,cAEAJ,EAAAQ,UAAA,WAAA,WAAA,WAGA,MAFAT,MAAAQ,SAAAO,SAAA,WACAf,KAAA0B,SACA1B,KAAA2B,YAAA3B,KAAAyB,KAAA,oBAIAD,KAAAxB,MACAH,OAAA,uBAAA,SAAA,YAAA,eAAA,YAAA,gCAAA,SAAAI,EAAA2B,EAAAC,GCtDA,OACAC,KAAA,WASA,QAAAC,KACAC,OAAAC,WAAA,KACAC,IAEAC,IAKA,QAAAC,GAAAC,GACAA,EAAAV,YAAA,eACA1B,EAAAqC,UAAAC,IAAA,qBAGA,QAAAJ,KACAG,SAAAE,KAAAC,MAAAC,WAAA,MACAC,EAAAC,UAAAC,OAAA,SAGA,QAAAX,KACAF,OAAAc,SAAAC,GACAT,SAAAE,KAAAC,MAAAC,WAAAC,EAAAK,aAAA,KACAL,EAAAC,UAAAK,IAAA,UAEAd,IAhCA1C,QAAAC,IAAA,SAIA,IAAAiD,GAAAL,SAAAY,cAAA,WACAC,EAAAb,SAAAY,cAAA,SACAH,EAAAI,EAAAC,SA+BA,IAAAC,QAAAC,OAAAC,QAGA,CACA,KAAAC,GAAAvD,EAAA,WAAAwD,SAAA,gBAEAxD,GAAA,2CAAAyD,GAAA,eAAA,SAAAC,GACA,GAAAC,GAAA3D,EAAAD,MACA6D,EAAAD,EAAApD,OAAA,sBACAmD,GAAAG,iBACAH,EAAAI,kBAGAF,EAAAJ,SAAA,eACArB,EAAAyB,IAIAA,EAAAG,SAAA,eAGAR,GACAvD,EAAAqC,UAAAoB,GAAA,oBAAA,SAAAO,GACAhE,EAAAgE,EAAAC,QAAAC,QAAA,uBAAAC,GAAAP,IACAzB,EAAAyB,YAvBA7B,QAAAqC,iBAAA,SAAAtC,GACAC,OAAAqC,iBAAA,SAAAtC;ADzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"core/modules/subnav.js","sourcesContent":["// Generated by CoffeeScript 1.6.2\r\n/*\r\nSticky Elements Shortcut for jQuery Waypoints - v2.0.4\r\nCopyright (c) 2011-2014 Caleb Troughton\r\nDual licensed under the MIT license and GPL license.\r\nhttps://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt\r\n*/\r\nconsole.log(\"sticky\");\r\n\r\n(function () {\r\n    (function (root, factory) {\r\n        if (typeof define === 'function' && define.amd) {\r\n            return define('libs/jquery.waypoints-sticky',['jquery', 'waypoints'], factory);\r\n        } else {\r\n            return factory(root.jQuery);\r\n        }\r\n    })(this, function ($) {\r\n        var defaults, wrap;\r\n\r\n        defaults = {\r\n            wrapper: '<div class=\"sticky-wrapper\" />',\r\n            stuckClass: 'stuck'\r\n        };\r\n        wrap = function ($elements, options) {\r\n            $elements.wrap(options.wrapper);\r\n            return $elements.parent();\r\n        };\r\n        $.waypoints('extendFn', 'sticky', function (opt) {\r\n            var $wrap, options, originalHandler;\r\n\r\n            options = $.extend({}, $.fn.waypoint.defaults, defaults, opt);\r\n            $wrap = wrap(this, options);\r\n            originalHandler = options.handler;\r\n            options.handler = function (direction) {\r\n                var $sticky, shouldBeStuck;\r\n\r\n                $sticky = $(this).children(':first');\r\n                shouldBeStuck = direction === 'down' || direction === 'right';\r\n                $wrap.height(shouldBeStuck ? $sticky.outerHeight() : '');\r\n                $sticky.toggleClass(options.stuckClass, shouldBeStuck);\r\n                if (originalHandler != null) {\r\n                    return originalHandler.call(this, direction);\r\n                }\r\n            };\r\n            $wrap.waypoint(options);\r\n            return this.data('stuckClass', options.stuckClass);\r\n        });\r\n        return $.waypoints('extendFn', 'unsticky', function () {\r\n            this.parent().waypoint('destroy');\r\n            this.unwrap();\r\n            return this.removeClass(this.data('stuckClass'));\r\n        });\r\n    });\r\n\r\n}).call(this);\n","define('core/modules/subnav',[\"jquery\", \"modernizr\", \"libs/enquire\", \"waypoints\", \"libs/jquery.waypoints-sticky\"], function ($, Modernizr, enquire) {\r\n    return {\r\n         init: function() {\r\n             console.log('subnav');\r\n \r\n             //Find the subnav container.  Then find its parent container to calculate the pixel\r\n             // distance from the top of the body to the top of the subnav.\r\n             var subnav = document.querySelector('.subnav');\r\n             var main = document.querySelector('#main');\r\n             var spaceAboveSubnav = main.offsetTop;\r\n\r\n             function applyStickToSubnavOnDesktop() {\r\n                 if (window.innerWidth > 1024) {\r\n                     stickSubNav();\r\n                 } else {\r\n                     removeClassesAndBodyPadding();\r\n                 }\r\n             }\r\n\r\n             // helper function to close subnav on mobile\r\n             function close($el) {\r\n                 $el.removeClass('subnav-open');\r\n                 $(document).off('touchstart.subnav');\r\n             }\r\n\r\n             function removeClassesAndBodyPadding() {\r\n                 document.body.style.paddingTop = '0px';\r\n                 subnav.classList.remove('stuck');\r\n             }\r\n  \r\n             function stickSubNav() {\r\n                 if (window.scrollY >= spaceAboveSubnav) {\r\n                     document.body.style.paddingTop = subnav.offsetHeight + 'px';\r\n                     subnav.classList.add('stuck');\r\n                 } else {\r\n                     removeClassesAndBodyPadding();\r\n                 }\r\n             }\r\n            \r\n             // test for touch functionality\r\n             if (!EFTOURS.device.isTouch) {  \r\n                 window.addEventListener('resize', applyStickToSubnavOnDesktop); \r\n                 window.addEventListener('scroll', applyStickToSubnavOnDesktop);                             \r\n             } else {\r\n                 const isMobile = $('.subnav').hasClass('subnav-mobile');\r\n \r\n                 $('.subnav-haschildren > .subnav-item-link').on('click.subnav', function(evt) {\r\n                     var $this = $(this),\r\n                         $parent = $this.parent('.subnav-haschildren');\r\n                     evt.preventDefault();\r\n                     evt.stopPropagation();\r\n \r\n                     // if already open, close\r\n                     if ($parent.hasClass('subnav-open')) {\r\n                         close($parent);\r\n                     }\r\n                     else {\r\n                         // add open class\r\n                         $parent.addClass('subnav-open');\r\n \r\n                         // if not full-width nav, it's ok to turn it off when you click outside, otherwise, let them scroll down\r\n                         if (!isMobile) {\r\n                             $(document).on('touchstart.subnav', function(event) {\r\n                                 if (!$(event.target).parents('.subnav-haschildren').is($parent)) {\r\n                                     close($parent);\r\n                                 }\r\n                             });\r\n                         }\r\n                     }\r\n                 });\r\n             }\r\n         }\r\n     }\r\n });\n"]}