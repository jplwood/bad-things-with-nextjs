{"version":3,"sources":["../ef_plugins/clearsearchtext.js","searchcancel.js"],"names":["define","jQuery","$","window","document","undefined","ClearSearchText","element","options","this","$element","metadata","data","extend","defaults","_defaults","_name","pluginName","init","textEnteredClass","prototype","$wrapper","parent","hasClass","addClass","_insertButton","_keyupListen","trigger","plugin","$button","after","_setClass","_clickListen","_removeClass","removeClass","off","on","$this","val","trim","event","preventDefault","focus","destroy","remove","removeData","fn","each","console","log","clearsearchtext"],"mappings":"AAAA,AAUAA,OAAA,mCAAA,UAAA,SAAAC,IACA,SAAAC,EAAAC,EAAAC,EAAAC,GAQA,QAAAC,GAAAC,EAAAC,GAEAC,KAAAF,QAAAA,EAGAE,KAAAC,SAAAR,EAAAK,GAGAE,KAAAE,SAAAF,KAAAC,SAAAE,KAAA,2BAGAH,KAAAD,QAAAN,EAAAW,UAAAC,EAAAN,EAAAC,KAAAE,UAGAF,KAAAM,UAAAD,EAGAL,KAAAO,MAAAC,EAGAR,KAAAS,OA1BA,GAAAD,GAAA,kBACAH,GACAK,iBAAA,+BA4BAb,GAAAc,WAEAF,KAAA,WACAT,KAAAY,SAAAZ,KAAAC,SAAAY,SAEAb,KAAAC,SAAAa,SAAA,0BACAd,KAAAY,SAAAG,SAAA,yBACAf,KAAAY,SAAAE,SAAA,4BACAd,KAAAY,SAAAG,SAAA,2BAGAf,KAAAgB,gBAEAhB,KAAAiB,eAGAjB,KAAAC,SAAAiB,QAAA,UAGAF,cAAA,WACA,GAAAG,GAAAnB,IACAmB,GAAAC,QAAA3B,EAAA,uEACA0B,EAAAlB,SAAAoB,MAAAF,EAAAC,UAGAE,UAAA,WACA,GAAAH,GAAAnB,IAEAmB,GAAAP,SAAAG,SAAAI,EAAApB,QAAAW,kBACAS,EAAAI,gBAGAC,aAAA,WACA,GAAAL,GAAAnB,IAEAmB,GAAAP,SAAAa,YAAAN,EAAApB,QAAAW,kBACAS,EAAAlB,SAAAyB,IAAA,0BAGAT,aAAA,WACA,GAAAE,GAAAnB,IAEAmB,GAAAlB,SAAA0B,GAAA,gDAAA,WACA,GAAAC,GAAAnC,EAAAO,KACA,KAAA4B,EAAAC,MAAAC,OACAX,EAAAG,YAEAH,EAAAK,kBAKAD,aAAA,WACA,GAAAJ,GAAAnB,IAEAmB,GAAAC,QAAAO,GAAA,wBAAA,SAAAI,GACAA,EAAAC,iBACAb,EAAAlB,SAAA4B,IAAA,IACAV,EAAAK,eACAL,EAAAlB,SAAAgC,WAIAC,QAAA,WACA,GAAAf,GAAAnB,IAGAmB,GAAAlB,SAAAyB,IAAA,iDAGAP,EAAAK,eACAxB,KAAAY,SAAAa,YAAA,yBACAzB,KAAAY,SAAAa,YAAA,2BAGAN,EAAAC,QAAAe,SAGAhB,EAAAlB,SAAAmC,WAAA,UAAA5B,KAKAf,EAAA4C,GAAA7B,GAAA,SAAAT,GACA,MAAAC,MAAAsC,KAAA,WACA7C,EAAAU,KAAAH,KAAA,UAAAQ,IACAf,EAAAU,KAAAH,KAAA,UAAAQ,EACA,GAAAX,GAAAG,KAAAD,QAKAP,EAAAE,OAAAC,YAEAJ,OAAA,6BAAA,SAAA,mCAAA,SAAAE,GCxIA,OACAgB,KAAA,WACA8B,QAAAC,IAAA,gBAIA/C,EAAA,uBAAAgD;ADNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"core/modules/searchcancel.js","sourcesContent":["/* \r\n * CLEAR SEARCH TEXT\r\n * Sets up behavior in text search fields to display an x symbol on the right of the field\r\n * when text has been entered, which users can click to clear out all text entered into the\r\n * field. \r\n * USAGE: $('input[type=\"search\"]').clearsearchtext();\r\n */\r\n\r\n\r\n;\r\ndefine('core/ef_plugins/clearsearchtext',[\"jquery\"], function (jQuery) {\r\n    (function ($, window, document, undefined) {\r\n        // deps: [\"jquery\"]\r\n        var pluginName = 'clearsearchtext', // CHANGE: 'plugin' to your plugin name\r\n            defaults = {\r\n                textEnteredClass: \"clearsearchtext-text-entered\"\r\n            };\r\n\r\n        // The actual plugin constructor\r\n        function ClearSearchText(element, options) { // CHANGE: Plugin to your plugin name capitalized\r\n            // grab the element the plugin was called on\r\n            this.element = element;\r\n\r\n            // also save the element as a jquery object\r\n            this.$element = $(element);\r\n\r\n            // get per-element inline configuration settings\r\n            this.metadata = this.$element.data('clearsearchtext-options'); // CHANGE 'plugin-options' to your plugin name -options\r\n\r\n            // merge all the configs\r\n            this.options = $.extend({}, defaults, options, this.metadata);\r\n\r\n            // save the defaults\r\n            this._defaults = defaults;\r\n\r\n            // save the plugin name\r\n            this._name = pluginName;\r\n\r\n            // call init function\r\n            this.init();\r\n        }\r\n\r\n        // Define this sucker\r\n        ClearSearchText.prototype = {\r\n            // CHANGE: Plugin to your plugin name capitalized\r\n            init: function () {\r\n                this.$wrapper = this.$element.parent();\r\n                // make sure all the correct classes are in place\r\n                if (!this.$element.hasClass('clearsearchtext-input'))\r\n                    this.$wrapper.addClass('clearsearchtext-input');\r\n                if (!this.$wrapper.hasClass('clearsearchtext-wrapper'))\r\n                    this.$wrapper.addClass('clearsearchtext-wrapper');\r\n\r\n                // insert x button\r\n                this._insertButton();\r\n                // setup listener\r\n                this._keyupListen();\r\n\r\n                // fire keyup on load to check if there is already text in the field\r\n                this.$element.trigger('keyup');\r\n            },\r\n\r\n            _insertButton: function () {\r\n                var plugin = this;\r\n                plugin.$button = $('<a href=\"#\" class=\"clearsearchtext-button\" title=\"Clear text\">x</a>');\r\n                plugin.$element.after(plugin.$button);\r\n            },\r\n\r\n            _setClass: function () {\r\n                var plugin = this;\r\n\r\n                plugin.$wrapper.addClass(plugin.options.textEnteredClass);\r\n                plugin._clickListen();\r\n            },\r\n\r\n            _removeClass: function () {\r\n                var plugin = this;\r\n\r\n                plugin.$wrapper.removeClass(plugin.options.textEnteredClass);\r\n                plugin.$element.off('click.clearsearchtext');\r\n            },\r\n\r\n            _keyupListen: function () {\r\n                var plugin = this;\r\n\r\n                plugin.$element.on('keyup.clearsearchtext, change.clearsearchtext', function () {\r\n                    var $this = $(this);\r\n                    if ($this.val().trim() != '') {\r\n                        plugin._setClass();\r\n                    } else {\r\n                        plugin._removeClass();\r\n                    }\r\n                });\r\n            },\r\n\r\n            _clickListen: function () {\r\n                var plugin = this;\r\n\r\n                plugin.$button.on('click.clearsearchtext', function (event) {\r\n                    event.preventDefault();\r\n                    plugin.$element.val('');\r\n                    plugin._removeClass();\r\n                    plugin.$element.focus();\r\n                });\r\n            },\r\n\r\n            destroy: function () {\r\n                var plugin = this;\r\n\r\n                // remove listeners\r\n                plugin.$element.off('keyup.clearsearchtext, change.clearsearchtext');\r\n\r\n                // remove classes\r\n                plugin._removeClass();\r\n                this.$wrapper.removeClass('clearsearchtext-input');\r\n                this.$wrapper.removeClass('clearsearchtext-wrapper');\r\n\r\n                // remove the button\r\n                plugin.$button.remove();\r\n\r\n                // remove the data\r\n                plugin.$element.removeData('plugin_' + pluginName);\r\n            }\r\n        };\r\n\r\n        // Turn this into a jquery plugin & prevent multiple instantiations\r\n        $.fn[pluginName] = function (options) {\r\n            return this.each(function () {\r\n                if (!$.data(this, 'plugin_' + pluginName)) {\r\n                    $.data(this, 'plugin_' + pluginName,\r\n                        new ClearSearchText(this, options)); // CHANGE: Plugin to plugin constructor defined above\r\n                }\r\n            });\r\n        }\r\n\r\n    })(jQuery, window, document);\r\n});\n","define('core/modules/searchcancel',[\"jquery\", \"core/ef_plugins/clearsearchtext\"], function ($) {\r\n        return {\r\n            init: function() {\r\n                console.log('searchcancel');\r\n\r\n                /* Provide an X that users can click to clear the search field. The search tours\r\n                ** bar could be dropped onto pages other than the search page (e.g., the US and Canada page). */\r\n                $('.js-clearsearchtext').clearsearchtext();\r\n            }\r\n        }\r\n        \r\n});\n"]}