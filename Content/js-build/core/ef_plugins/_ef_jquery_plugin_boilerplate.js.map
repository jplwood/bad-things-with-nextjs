{"version":3,"sources":["../global/helpers.js","_ef_jquery_plugin_boilerplate.js"],"names":["Array","prototype","contains","a","b","this","length","String","it","indexOf","define","$","_","console","log","getFuncFromString","fnName","temp","i","il","func","split","window","toBool","val","isBoolean","isString","toLowerCase","Error","mapKeys","data","map","each","value","key","list","newKey","constructUrl","params","newurl","param","document","location","pathname","isMobile","test","navigator","userAgent","validate","validationType","isValid","nameRegex","emailRegex","replace","phoneRegex","passportRegex","countryCodeRegex","expirationDateRegex","Boolean","getCurrentDate","d","Date","curr_date","getDate","curr_month","getMonth","curr_year","getFullYear","jQuery","undefined","Plugin","element","options","$element","metadata","extend","defaults","_defaults","_name","pluginName","init","foo","bar","stuff","morestuff","_doStuff","_dostuff","plugin","publicstuff","alert","destroy","removeData","fn"],"mappings":"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":"core/ef_plugins/_ef_jquery_plugin_boilerplate.js","sourcesContent":["/* Extensions to existing objects/javascript built-in stuff */\r\n\r\n// Array.contains and String.contains helper methods - added directly to objects\r\nArray.prototype.contains = function (a) {\r\n    var b = this.length;\r\n    while (b--) {\r\n        if (this[b] === a) return true;\r\n    }\r\n    return false;\r\n}\r\nif (typeof String.prototype.contains === 'undefined') {\r\n    String.prototype.contains = function (it) { return this.indexOf(it) != -1; };\r\n}\r\n\r\n// Return helper functions\r\ndefine('core/global/helpers',[\"jquery\", \"underscore\"], function($, _) {\r\n    console.log('global/helpers');\r\n    return {\r\n        //************** CONVERT STRING TO FUNCTION ***********\r\n        // get a function from the string of the function name\r\n        // used so we can have namespaced functions defined as callbacks in string html attributes\r\n        // e.g. <form ourCallback=\"some.function.name\">\r\n        getFuncFromString: function(fnName) {\r\n            var temp, i, il, func;\r\n\r\n            if (typeof (fnName) !== \"function\") {\r\n                // split function name into pieces\r\n                temp = fnName.split('.');\r\n                il = temp.length;\r\n\r\n                // loop through\r\n                for (i = 0; i < il; i++) {\r\n                    if (func == null) {\r\n                        func = window[temp[i]];\r\n                        continue;\r\n                    }\r\n                    func = func[temp[i]];\r\n                }\r\n            } else {\r\n                func = fnName;\r\n            }\r\n\r\n            return func;\r\n        },\r\n\r\n        // takes in a string or bool value and returns a boolean\r\n        toBool: function(val) {\r\n            if (_.isBoolean(val)) {\r\n                return val;\r\n            } else if (_.isString(val)) {\r\n                return (val.toLowerCase() === \"true\");\r\n            } else {\r\n                throw new Error(\"The toBool() function only works with strings and booleans.\");\r\n            }\r\n        },\r\n\r\n        mapKeys: function(data, map) {\r\n            _.each(data, function(value, key, list) {\r\n                var newKey = map[key];\r\n                if (newKey) {\r\n                    data[newKey] = value;\r\n                    delete data[key];\r\n                }\r\n            });\r\n            return data;\r\n        },\r\n\r\n        constructUrl: function(params) {\r\n            var newurl;\r\n            newurl = $.param(params);\r\n            if (newurl.length > 0) {\r\n                // Create a new query string\r\n                newurl = '?' + newurl;\r\n            } else {\r\n                // Clear the query string\r\n                newurl = document.location.pathname;\r\n            }\r\n            return newurl;\r\n        },\r\n\r\n        isMobile: function () {\r\n            return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent));\r\n        },\r\n\r\n\r\n        validate: function (validationType, value) { //find a way to reference this without it being in the component if we care enough\r\n            var isValid = true; //we could probably use http://caniuse.com/#feat=input-pattern instead of doing this validate method\r\n\r\n            switch (validationType) {\r\n                case \"name\":\r\n                    if (value) { //empty value is valid\r\n                        var nameRegex = /^[a-zA-Z \\-]+$/i;\r\n                        isValid = nameRegex.test(value);\r\n                    }\r\n                    break;\r\n                case \"email\": //everything i've read says to let the browser do this instead of using some regex\r\n                    if (value) { //empty value is valid\r\n                        var emailRegex = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\r\n                        isValid = emailRegex.test(value);\r\n                    }\r\n                    break;\r\n                case \"phone\":\r\n                    if (value) { //empty value is valid\r\n                        value = value.replace(/[.()-]/g, '').replace(/ /, '');\r\n                        var phoneRegex = /^[0-9]{7,25}$/;\r\n                        isValid = phoneRegex.test(value);\r\n                    }\r\n                    break;\r\n                case \"passport\":\r\n                    if (value) { //empty value is valid\r\n                        var passportRegex = /^[\\w\\d]{1,12}$/;\r\n                        isValid = passportRegex.test(value);\r\n                    }\r\n                    break;\r\n                case \"countryCode\":\r\n                    if (value) { //empty value is valid\n                        var countryCodeRegex = /^[a-zA-Z]{3,}$/;\r\n                        isValid = countryCodeRegex.test(value);\r\n                    }\r\n                    break;\r\n                case (\"date\"): // Checks html5 date (YYYY-MM-DD)\r\n                    if (value) { //empty value is valid\r\n                        var expirationDateRegex = /^[0-9]{4}-[0-9]{1,2}-[0-9]{1,2}$/;\r\n                        isValid = expirationDateRegex.test(value);\r\n                    }\r\n                    break;\r\n                case (\"dateTextInput\"): // Checks date (MM/DD/YYYY)\r\n                    if (value) { //empty value is valid\r\n                        var expirationDateRegex = /^[0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4}$/;\r\n                        isValid = expirationDateRegex.test(value);\r\n                    }\r\n                    break;\r\n            }\r\n            return Boolean(isValid);\r\n        },\r\n\r\n        getCurrentDate: function () {\r\n            var d = new Date();\r\n            var curr_date = d.getDate();\r\n            var curr_month = d.getMonth() + 1; //Months are zero based\r\n            var curr_year = d.getFullYear();\r\n            return curr_month + \"/\" + curr_date + \"/\" + curr_year;\r\n        }\r\n    };\r\n});\r\n\n","/* \r\n * EFTOURS JQUERY PLUGIN BOILERPLATE\r\n * This code is a combination of various approaches outlined in \r\n * http://coding.smashingmagazine.com/2011/10/11/essential-jquery-plugin-patterns/\r\n * (\"A lightweight start\" merged with \"A Highly Configurable And Mutable Plugin\")\r\n \r\n * CUSTOMIZATION: Update any uses of \"plugin\" or \"Plugin\" to your plugin's name\r\n * each line that needs to change is commented with \"CHANGE\"\r\n * Be sure to document/comment your code and give example html and example js!\r\n\r\n * USAGE:\r\n * example html - uses inline data attribute to override options on per-element basis\r\n * NOTE: You cannot define functions this way, only simple types & Note the inverted comma nesting!\r\n\r\n    <div class=\"myplugin\" data-myplugin-options='{\"foo\":\"foo\"}'>this is my plugin!</div>\r\n\r\n * example js - saves plugin object as variable so can access again\r\n\r\n    var myplugin = $('.myplugin').myplugin({\r\n            \"bar\":\"bar\"\r\n        }).data('plugin_myplugin');\r\n\r\n    myplugin.publicstuff();\r\n\r\n * Happy plugin authoring!!!\r\n */\r\n\r\n\r\n; define('core/ef_plugins/_ef_jquery_plugin_boilerplate',[\"jquery\", \"underscore\", \"libs/amplify.core\", \"core/global/helpers\"], function (jQuery) { // CHANGE: Replace with your plugin's dependencies\r\n    (function($, window, document, undefined) {\r\n\r\n        var pluginName = 'plugin', // CHANGE: 'plugin' to your plugin name\r\n            defaults = {\r\n                foo: \"bar\",\r\n                bar: \"foo\"\r\n            };\r\n\r\n        // The actual plugin constructor\r\n        function Plugin(element, options) { // CHANGE: Plugin to your plugin name capitalized\r\n            // grab the element the plugin was called on\r\n            this.element = element;\r\n\r\n            // also save the element as a jquery object\r\n            this.$element = $(element);\r\n\r\n            // get per-element inline configuration settings\r\n            this.metadata = this.$element.data('plugin-options'); // CHANGE 'plugin-options' to your plugin name -options\r\n\r\n            // merge all the configs\r\n            this.options = $.extend({}, defaults, options, this.metadata);\r\n\r\n            // save the defaults\r\n            this._defaults = defaults;\r\n\r\n            // save the plugin name\r\n            this._name = pluginName;\r\n\r\n            // call init function\r\n            this.init();\r\n        }\r\n\r\n        // Define this sucker\r\n        Plugin.prototype = {\r\n// CHANGE: Plugin to your plugin name capitalized\r\n            init: function() {\r\n                // setup global vars here\r\n                this.stuff = \"blah\";\r\n                this.morestuff = this.options.bar;\r\n\r\n                // do stuff!\r\n                this._doStuff();\r\n            },\r\n\r\n            // example private method (nothing really makes it technically private, just naming convention using the _)\r\n            _dostuff: function() {\r\n                // re-reference the plugin to avoid this conflicts\r\n                var plugin = this;\r\n\r\n                // do stuff!\r\n                plugin.stuff = plugin.stuff + plugin.options.foo;\r\n            },\r\n\r\n            // example public method\r\n            publicstuff: function() {\r\n                // re-reference the plugin to avoid this conflicts\r\n                var plugin = this;\r\n\r\n                alert('The stuff is: ' + plugin.stuff);\r\n            },\r\n\r\n            // Make a destroy function now, we'll need it at some point\r\n            destroy: function() {\r\n                // whatever you need to do to destroy this sucka goes here\r\n                // remove event handlers, put html back where it was, etc.\r\n\r\n                // remove the data\r\n                plugin.$element.removeData('plugin_' + pluginName);\r\n            }\r\n\r\n        };\r\n\r\n        // Turn this into a jquery plugin & prevent multiple instantiations\r\n        $.fn[pluginName] = function(options) {\r\n            return this.each(function() {\r\n                if (!$.data(this, 'plugin_' + pluginName)) {\r\n                    $.data(this, 'plugin_' + pluginName,\r\n                        new Plugin(this, options)); // CHANGE: Plugin to plugin constructor defined above\r\n                }\r\n            });\r\n        }\r\n\r\n    })(jQuery, window, document);\r\n});\n"]}