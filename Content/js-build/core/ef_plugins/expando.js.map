{"version":3,"sources":["../../libs/jquery.transit.js","expando.js"],"names":["define","$","getVendorPropertyName","prop","div","style","prefixes","prop_","charAt","toUpperCase","substr","i","length","vendorProp","checkTransform3dSupport","support","transform","Transform","str","this","parse","callOrQueue","self","queue","fn","getProperties","props","re","each","key","camelCase","transit","propertyMap","cssProps","uncamel","inArray","push","getTransition","properties","duration","easing","delay","cssEase","attribs","toMS","parseInt","transitions","name","join","registerCssHook","isPixels","cssNumber","cssHooks","get","elem","t","css","set","value","setFromString","transit:transform","replace","letter","toLowerCase","unit","units","match","fx","speeds","version","marginLeft","marginRight","marginBottom","marginTop","paddingLeft","paddingRight","paddingBottom","paddingTop","enabled","useTransitionEnd","document","createElement","isChrome","navigator","userAgent","indexOf","transition","transitionDelay","transformOrigin","transform3d","eventNames","MozTransition","OTransition","WebkitTransition","msTransition","transitionEnd","hasOwnProperty","_default","in","out","in-out","snap","easeOutCubic","easeInOutCubic","easeInCirc","easeOutCirc","easeInOutCirc","easeInExpo","easeOutExpo","easeInOutExpo","easeInQuad","easeOutQuad","easeInOutQuad","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInBack","easeOutBack","easeInOutBack","data","v","toString","jquery","prototype","val","args","split","constructor","Array","unshift","apply","slice","arguments","setter","getter","rotate","theta","rotateX","rotateY","scale","x","y","undefined","skewX","skewY","perspective","dist","translate","_translateX","_translateY","s","parseFloat","rotate3d","use3d","callback","complete","transitionValue","work","next","oldTransitions","run","nextCall","bound","cb","unbind","bind","window","setTimeout","deferredRun","offsetWidth","getTransitionValue","jQuery","Expando","element","options","$element","metadata","extend","defaults","_defaults","_name","pluginName","init","activeClass","animateClass","animate","animateTime","excerpt","trigger","useTogglr","togglr","plugin","$excerpt","siblings","$trigger","parents","on","expand","collapse","toggle","expanded","display","_animate","startHeight","endHeight","addClass","overflow","height","removeClass","destroy","off","removeData"],"mappings":"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":"core/ef_plugins/expando.js","sourcesContent":["/*!\r\n * jQuery Transit - CSS3 transitions and transformations\r\n * (c) 2011-2012 Rico Sta. Cruz <rico@ricostacruz.com>\r\n * MIT Licensed.\r\n *\r\n * http://ricostacruz.com/jquery.transit\r\n * http://github.com/rstacruz/jquery.transit\r\n */\r\n\r\ndefine('libs/jquery.transit',[\"jquery\"], function ($) {\r\n    $.transit = {\r\n        version: \"0.9.9\",\r\n\r\n        // Map of $.css() keys to values for 'transitionProperty'.\r\n        // See https://developer.mozilla.org/en/CSS/CSS_transitions#Properties_that_can_be_animated\r\n        propertyMap: {\r\n            marginLeft: 'margin',\r\n            marginRight: 'margin',\r\n            marginBottom: 'margin',\r\n            marginTop: 'margin',\r\n            paddingLeft: 'padding',\r\n            paddingRight: 'padding',\r\n            paddingBottom: 'padding',\r\n            paddingTop: 'padding'\r\n        },\r\n\r\n        // Will simply transition \"instantly\" if false\r\n        enabled: true,\r\n\r\n        // Set this to false if you don't want to use the transition end property.\r\n        useTransitionEnd: false\r\n    };\r\n\r\n    var div = document.createElement('div');\r\n    var support = {};\r\n\r\n    // Helper function to get the proper vendor property name.\r\n    // (`transition` => `WebkitTransition`)\r\n    function getVendorPropertyName(prop) {\r\n        // Handle unprefixed versions (FF16+, for example)\r\n        if (prop in div.style) return prop;\r\n\r\n        var prefixes = ['Moz', 'Webkit', 'O', 'ms'];\r\n        var prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);\r\n\r\n        if (prop in div.style) { return prop; }\r\n\r\n        for (var i = 0; i < prefixes.length; ++i) {\r\n            var vendorProp = prefixes[i] + prop_;\r\n            if (vendorProp in div.style) { return vendorProp; }\r\n        }\r\n    }\r\n\r\n    // Helper function to check if transform3D is supported.\r\n    // Should return true for Webkits and Firefox 10+.\r\n    function checkTransform3dSupport() {\r\n        div.style[support.transform] = '';\r\n        div.style[support.transform] = 'rotateY(90deg)';\r\n        return div.style[support.transform] !== '';\r\n    }\r\n\r\n    var isChrome = navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\r\n\r\n    // Check for the browser's transitions support.\r\n    support.transition = getVendorPropertyName('transition');\r\n    support.transitionDelay = getVendorPropertyName('transitionDelay');\r\n    support.transform = getVendorPropertyName('transform');\r\n    support.transformOrigin = getVendorPropertyName('transformOrigin');\r\n    support.transform3d = checkTransform3dSupport();\r\n\r\n    var eventNames = {\r\n        'transition': 'transitionEnd',\r\n        'MozTransition': 'transitionend',\r\n        'OTransition': 'oTransitionEnd',\r\n        'WebkitTransition': 'webkitTransitionEnd',\r\n        'msTransition': 'MSTransitionEnd'\r\n    };\r\n\r\n    // Detect the 'transitionend' event needed.\r\n    var transitionEnd = support.transitionEnd = eventNames[support.transition] || null;\r\n\r\n    // Populate jQuery's `$.support` with the vendor prefixes we know.\r\n    // As per [jQuery's cssHooks documentation](http://api.jquery.com/jQuery.cssHooks/),\r\n    // we set $.support.transition to a string of the actual property name used.\r\n    for (var key in support) {\r\n        if (support.hasOwnProperty(key) && typeof $.support[key] === 'undefined') {\r\n            $.support[key] = support[key];\r\n        }\r\n    }\r\n\r\n    // Avoid memory leak in IE.\r\n    div = null;\r\n\r\n    // ## $.cssEase\r\n    // List of easing aliases that you can use with `$.fn.transition`.\r\n    $.cssEase = {\r\n        '_default': 'ease',\r\n        'in': 'ease-in',\r\n        'out': 'ease-out',\r\n        'in-out': 'ease-in-out',\r\n        'snap': 'cubic-bezier(0,1,.5,1)',\r\n        // Penner equations\r\n        'easeOutCubic': 'cubic-bezier(.215,.61,.355,1)',\r\n        'easeInOutCubic': 'cubic-bezier(.645,.045,.355,1)',\r\n        'easeInCirc': 'cubic-bezier(.6,.04,.98,.335)',\r\n        'easeOutCirc': 'cubic-bezier(.075,.82,.165,1)',\r\n        'easeInOutCirc': 'cubic-bezier(.785,.135,.15,.86)',\r\n        'easeInExpo': 'cubic-bezier(.95,.05,.795,.035)',\r\n        'easeOutExpo': 'cubic-bezier(.19,1,.22,1)',\r\n        'easeInOutExpo': 'cubic-bezier(1,0,0,1)',\r\n        'easeInQuad': 'cubic-bezier(.55,.085,.68,.53)',\r\n        'easeOutQuad': 'cubic-bezier(.25,.46,.45,.94)',\r\n        'easeInOutQuad': 'cubic-bezier(.455,.03,.515,.955)',\r\n        'easeInQuart': 'cubic-bezier(.895,.03,.685,.22)',\r\n        'easeOutQuart': 'cubic-bezier(.165,.84,.44,1)',\r\n        'easeInOutQuart': 'cubic-bezier(.77,0,.175,1)',\r\n        'easeInQuint': 'cubic-bezier(.755,.05,.855,.06)',\r\n        'easeOutQuint': 'cubic-bezier(.23,1,.32,1)',\r\n        'easeInOutQuint': 'cubic-bezier(.86,0,.07,1)',\r\n        'easeInSine': 'cubic-bezier(.47,0,.745,.715)',\r\n        'easeOutSine': 'cubic-bezier(.39,.575,.565,1)',\r\n        'easeInOutSine': 'cubic-bezier(.445,.05,.55,.95)',\r\n        'easeInBack': 'cubic-bezier(.6,-.28,.735,.045)',\r\n        'easeOutBack': 'cubic-bezier(.175, .885,.32,1.275)',\r\n        'easeInOutBack': 'cubic-bezier(.68,-.55,.265,1.55)'\r\n    };\r\n\r\n    // ## 'transform' CSS hook\r\n    // Allows you to use the `transform` property in CSS.\r\n    //\r\n    //     $(\"#hello\").css({ transform: \"rotate(90deg)\" });\r\n    //\r\n    //     $(\"#hello\").css('transform');\r\n    //     //=> { rotate: '90deg' }\r\n    //\r\n    $.cssHooks['transit:transform'] = {\r\n        // The getter returns a `Transform` object.\r\n        get: function (elem) {\r\n            return $(elem).data('transform') || new Transform();\r\n        },\r\n\r\n        // The setter accepts a `Transform` object or a string.\r\n        set: function (elem, v) {\r\n            var value = v;\r\n\r\n            if (!(value instanceof Transform)) {\r\n                value = new Transform(value);\r\n            }\r\n\r\n            // We've seen the 3D version of Scale() not work in Chrome when the\r\n            // element being scaled extends outside of the viewport.  Thus, we're\r\n            // forcing Chrome to not use the 3d transforms as well.  Not sure if\r\n            // translate is affectede, but not risking it.  Detection code from\r\n            // http://davidwalsh.name/detecting-google-chrome-javascript\r\n            if (support.transform === 'WebkitTransform' && !isChrome) {\r\n                elem.style[support.transform] = value.toString(true);\r\n            } else {\r\n                elem.style[support.transform] = value.toString();\r\n            }\r\n\r\n            $(elem).data('transform', value);\r\n        }\r\n    };\r\n\r\n    // Add a CSS hook for `.css({ transform: '...' })`.\r\n    // In jQuery 1.8+, this will intentionally override the default `transform`\r\n    // CSS hook so it'll play well with Transit. (see issue #62)\r\n    $.cssHooks.transform = {\r\n        set: $.cssHooks['transit:transform'].set\r\n    };\r\n\r\n    // jQuery 1.8+ supports prefix-free transitions, so these polyfills will not\r\n    // be necessary.\r\n    if ($.fn.jquery < \"1.8\") {\r\n        // ## 'transformOrigin' CSS hook\r\n        // Allows the use for `transformOrigin` to define where scaling and rotation\r\n        // is pivoted.\r\n        //\r\n        //     $(\"#hello\").css({ transformOrigin: '0 0' });\r\n        //\r\n        $.cssHooks.transformOrigin = {\r\n            get: function (elem) {\r\n                return elem.style[support.transformOrigin];\r\n            },\r\n            set: function (elem, value) {\r\n                elem.style[support.transformOrigin] = value;\r\n            }\r\n        };\r\n\r\n        // ## 'transition' CSS hook\r\n        // Allows you to use the `transition` property in CSS.\r\n        //\r\n        //     $(\"#hello\").css({ transition: 'all 0 ease 0' });\r\n        //\r\n        $.cssHooks.transition = {\r\n            get: function (elem) {\r\n                return elem.style[support.transition];\r\n            },\r\n            set: function (elem, value) {\r\n                elem.style[support.transition] = value;\r\n            }\r\n        };\r\n    }\r\n\r\n    // ## Other CSS hooks\r\n    // Allows you to rotate, scale and translate.\r\n    registerCssHook('scale');\r\n    registerCssHook('translate');\r\n    registerCssHook('rotate');\r\n    registerCssHook('rotateX');\r\n    registerCssHook('rotateY');\r\n    registerCssHook('rotate3d');\r\n    registerCssHook('perspective');\r\n    registerCssHook('skewX');\r\n    registerCssHook('skewY');\r\n    registerCssHook('x', true);\r\n    registerCssHook('y', true);\r\n\r\n    // ## Transform class\r\n    // This is the main class of a transformation property that powers\r\n    // `$.fn.css({ transform: '...' })`.\r\n    //\r\n    // This is, in essence, a dictionary object with key/values as `-transform`\r\n    // properties.\r\n    //\r\n    //     var t = new Transform(\"rotate(90) scale(4)\");\r\n    //\r\n    //     t.rotate             //=> \"90deg\"\r\n    //     t.scale              //=> \"4,4\"\r\n    //\r\n    // Setters are accounted for.\r\n    //\r\n    //     t.set('rotate', 4)\r\n    //     t.rotate             //=> \"4deg\"\r\n    //\r\n    // Convert it to a CSS string using the `toString()` and `toString(true)` (for WebKit)\r\n    // functions.\r\n    //\r\n    //     t.toString()         //=> \"rotate(90deg) scale(4,4)\"\r\n    //     t.toString(true)     //=> \"rotate(90deg) scale3d(4,4,0)\" (WebKit version)\r\n    //\r\n    function Transform(str) {\r\n        if (typeof str === 'string') { this.parse(str); }\r\n        return this;\r\n    }\r\n\r\n    Transform.prototype = {\r\n        // ### setFromString()\r\n        // Sets a property from a string.\r\n        //\r\n        //     t.setFromString('scale', '2,4');\r\n        //     // Same as set('scale', '2', '4');\r\n        //\r\n        setFromString: function (prop, val) {\r\n            var args =\r\n              (typeof val === 'string') ? val.split(',') :\r\n              (val.constructor === Array) ? val :\r\n              [val];\r\n\r\n            args.unshift(prop);\r\n\r\n            Transform.prototype.set.apply(this, args);\r\n        },\r\n\r\n        // ### set()\r\n        // Sets a property.\r\n        //\r\n        //     t.set('scale', 2, 4);\r\n        //\r\n        set: function (prop) {\r\n            var args = Array.prototype.slice.apply(arguments, [1]);\r\n            if (this.setter[prop]) {\r\n                this.setter[prop].apply(this, args);\r\n            } else {\r\n                this[prop] = args.join(',');\r\n            }\r\n        },\r\n\r\n        get: function (prop) {\r\n            if (this.getter[prop]) {\r\n                return this.getter[prop].apply(this);\r\n            } else {\r\n                return this[prop] || 0;\r\n            }\r\n        },\r\n\r\n        setter: {\r\n            // ### rotate\r\n            //\r\n            //     .css({ rotate: 30 })\r\n            //     .css({ rotate: \"30\" })\r\n            //     .css({ rotate: \"30deg\" })\r\n            //     .css({ rotate: \"30deg\" })\r\n            //\r\n            rotate: function (theta) {\r\n                this.rotate = unit(theta, 'deg');\r\n            },\r\n\r\n            rotateX: function (theta) {\r\n                this.rotateX = unit(theta, 'deg');\r\n            },\r\n\r\n            rotateY: function (theta) {\r\n                this.rotateY = unit(theta, 'deg');\r\n            },\r\n\r\n            // ### scale\r\n            //\r\n            //     .css({ scale: 9 })      //=> \"scale(9,9)\"\r\n            //     .css({ scale: '3,2' })  //=> \"scale(3,2)\"\r\n            //\r\n            scale: function (x, y) {\r\n                if (y === undefined) { y = x; }\r\n                this.scale = x + \",\" + y;\r\n            },\r\n\r\n            // ### skewX + skewY\r\n            skewX: function (x) {\r\n                this.skewX = unit(x, 'deg');\r\n            },\r\n\r\n            skewY: function (y) {\r\n                this.skewY = unit(y, 'deg');\r\n            },\r\n\r\n            // ### perspectvie\r\n            perspective: function (dist) {\r\n                this.perspective = unit(dist, 'px');\r\n            },\r\n\r\n            // ### x / y\r\n            // Translations. Notice how this keeps the other value.\r\n            //\r\n            //     .css({ x: 4 })       //=> \"translate(4px, 0)\"\r\n            //     .css({ y: 10 })      //=> \"translate(4px, 10px)\"\r\n            //\r\n            x: function (x) {\r\n                this.set('translate', x, null);\r\n            },\r\n\r\n            y: function (y) {\r\n                this.set('translate', null, y);\r\n            },\r\n\r\n            // ### translate\r\n            // Notice how this keeps the other value.\r\n            //\r\n            //     .css({ translate: '2, 5' })    //=> \"translate(2px, 5px)\"\r\n            //\r\n            translate: function (x, y) {\r\n                if (this._translateX === undefined) { this._translateX = 0; }\r\n                if (this._translateY === undefined) { this._translateY = 0; }\r\n\r\n                if (x !== null && x !== undefined) { this._translateX = unit(x, 'px'); }\r\n                if (y !== null && y !== undefined) { this._translateY = unit(y, 'px'); }\r\n\r\n                this.translate = this._translateX + \",\" + this._translateY;\r\n            }\r\n        },\r\n\r\n        getter: {\r\n            x: function () {\r\n                return this._translateX || 0;\r\n            },\r\n\r\n            y: function () {\r\n                return this._translateY || 0;\r\n            },\r\n\r\n            scale: function () {\r\n                var s = (this.scale || \"1,1\").split(',');\r\n                if (s[0]) { s[0] = parseFloat(s[0]); }\r\n                if (s[1]) { s[1] = parseFloat(s[1]); }\r\n\r\n                // \"2.5,2.5\" => 2.5\r\n                // \"2.5,1\" => [2.5,1]\r\n                return (s[0] === s[1]) ? s[0] : s;\r\n            },\r\n\r\n            rotate3d: function () {\r\n                var s = (this.rotate3d || \"0,0,0,0deg\").split(',');\r\n                for (var i = 0; i <= 3; ++i) {\r\n                    if (s[i]) { s[i] = parseFloat(s[i]); }\r\n                }\r\n                if (s[3]) { s[3] = unit(s[3], 'deg'); }\r\n\r\n                return s;\r\n            }\r\n        },\r\n\r\n        // ### parse()\r\n        // Parses from a string. Called on constructor.\r\n        parse: function (str) {\r\n            var self = this;\r\n            str.replace(/([a-zA-Z0-9]+)\\((.*?)\\)/g, function (x, prop, val) {\r\n                self.setFromString(prop, val);\r\n            });\r\n        },\r\n\r\n        // ### toString()\r\n        // Converts to a `transition` CSS property string. If `use3d` is given,\r\n        // it converts to a `-webkit-transition` CSS property string instead.\r\n        toString: function (use3d) {\r\n            var re = [];\r\n\r\n            for (var i in this) {\r\n                if (this.hasOwnProperty(i)) {\r\n                    // Don't use 3D transformations if the browser can't support it.\r\n                    if ((!support.transform3d) && (\r\n                      (i === 'rotateX') ||\r\n                      (i === 'rotateY') ||\r\n                      (i === 'perspective') ||\r\n                      (i === 'transformOrigin'))) { continue; }\r\n\r\n                    if (i[0] !== '_') {\r\n                        if (use3d && (i === 'scale')) {\r\n                            re.push(i + \"3d(\" + this[i] + \",1)\");\r\n                        } else if (use3d && (i === 'translate')) {\r\n                            re.push(i + \"3d(\" + this[i] + \",0)\");\r\n                        } else {\r\n                            re.push(i + \"(\" + this[i] + \")\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return re.join(\" \");\r\n        }\r\n    };\r\n\r\n    function callOrQueue(self, queue, fn) {\r\n        if (queue === true) {\r\n            self.queue(fn);\r\n        } else if (queue) {\r\n            self.queue(queue, fn);\r\n        } else {\r\n            fn();\r\n        }\r\n    }\r\n\r\n    // ### getProperties(dict)\r\n    // Returns properties (for `transition-property`) for dictionary `props`. The\r\n    // value of `props` is what you would expect in `$.css(...)`.\r\n    function getProperties(props) {\r\n        var re = [];\r\n\r\n        $.each(props, function (key) {\r\n            key = $.camelCase(key); // Convert \"text-align\" => \"textAlign\"\r\n            key = $.transit.propertyMap[key] || $.cssProps[key] || key;\r\n            key = uncamel(key); // Convert back to dasherized\r\n\r\n            if ($.inArray(key, re) === -1) { re.push(key); }\r\n        });\r\n\r\n        return re;\r\n    }\r\n\r\n    // ### getTransition()\r\n    // Returns the transition string to be used for the `transition` CSS property.\r\n    //\r\n    // Example:\r\n    //\r\n    //     getTransition({ opacity: 1, rotate: 30 }, 500, 'ease');\r\n    //     //=> 'opacity 500ms ease, -webkit-transform 500ms ease'\r\n    //\r\n    function getTransition(properties, duration, easing, delay) {\r\n        // Get the CSS properties needed.\r\n        var props = getProperties(properties);\r\n\r\n        // Account for aliases (`in` => `ease-in`).\r\n        if ($.cssEase[easing]) { easing = $.cssEase[easing]; }\r\n\r\n        // Build the duration/easing/delay attributes for it.\r\n        var attribs = '' + toMS(duration) + ' ' + easing;\r\n        if (parseInt(delay, 10) > 0) { attribs += ' ' + toMS(delay); }\r\n\r\n        // For more properties, add them this way:\r\n        // \"margin 200ms ease, padding 200ms ease, ...\"\r\n        var transitions = [];\r\n        $.each(props, function (i, name) {\r\n            transitions.push(name + ' ' + attribs);\r\n        });\r\n\r\n        return transitions.join(', ');\r\n    }\r\n\r\n    // ## $.fn.transition\r\n    // Works like $.fn.animate(), but uses CSS transitions.\r\n    //\r\n    //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 });\r\n    //\r\n    //     // Specific duration\r\n    //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500);\r\n    //\r\n    //     // With duration and easing\r\n    //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in');\r\n    //\r\n    //     // With callback\r\n    //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, function() { ... });\r\n    //\r\n    //     // With everything\r\n    //     $(\"...\").transition({ opacity: 0.1, scale: 0.3 }, 500, 'in', function() { ... });\r\n    //\r\n    //     // Alternate syntax\r\n    //     $(\"...\").transition({\r\n    //       opacity: 0.1,\r\n    //       duration: 200,\r\n    //       delay: 40,\r\n    //       easing: 'in',\r\n    //       complete: function() { /* ... */ }\r\n    //      });\r\n    //\r\n    $.fn.transition = $.fn.transit = function (properties, duration, easing, callback) {\r\n        var self = this;\r\n        var delay = 0;\r\n        var queue = true;\r\n\r\n        // Account for `.transition(properties, callback)`.\r\n        if (typeof duration === 'function') {\r\n            callback = duration;\r\n            duration = undefined;\r\n        }\r\n\r\n        // Account for `.transition(properties, duration, callback)`.\r\n        if (typeof easing === 'function') {\r\n            callback = easing;\r\n            easing = undefined;\r\n        }\r\n\r\n        // Alternate syntax.\r\n        if (typeof properties.easing !== 'undefined') {\r\n            easing = properties.easing;\r\n            delete properties.easing;\r\n        }\r\n\r\n        if (typeof properties.duration !== 'undefined') {\r\n            duration = properties.duration;\r\n            delete properties.duration;\r\n        }\r\n\r\n        if (typeof properties.complete !== 'undefined') {\r\n            callback = properties.complete;\r\n            delete properties.complete;\r\n        }\r\n\r\n        if (typeof properties.queue !== 'undefined') {\r\n            queue = properties.queue;\r\n            delete properties.queue;\r\n        }\r\n\r\n        if (typeof properties.delay !== 'undefined') {\r\n            delay = properties.delay;\r\n            delete properties.delay;\r\n        }\r\n\r\n        // Set defaults. (`400` duration, `ease` easing)\r\n        if (typeof duration === 'undefined') { duration = $.fx.speeds._default; }\r\n        if (typeof easing === 'undefined') { easing = $.cssEase._default; }\r\n\r\n        duration = toMS(duration);\r\n\r\n        // Build the `transition` property.\r\n        var transitionValue = getTransition(properties, duration, easing, delay);\r\n\r\n        // Compute delay until callback.\r\n        // If this becomes 0, don't bother setting the transition property.\r\n        var work = $.transit.enabled && support.transition;\r\n        var i = work ? (parseInt(duration, 10) + parseInt(delay, 10)) : 0;\r\n\r\n        // If there's nothing to do...\r\n        if (i === 0) {\r\n            var fn = function (next) {\r\n                self.css(properties);\r\n                if (callback) { callback.apply(self); }\r\n                if (next) { next(); }\r\n            };\r\n\r\n            callOrQueue(self, queue, fn);\r\n            return self;\r\n        }\r\n\r\n        // Save the old transitions of each element so we can restore it later.\r\n        var oldTransitions = {};\r\n\r\n        var run = function (nextCall) {\r\n            var bound = false;\r\n\r\n            // Prepare the callback.\r\n            var cb = function () {\r\n                if (bound) { self.unbind(transitionEnd, cb); }\r\n\r\n                if (i > 0) {\r\n                    self.each(function () {\r\n                        this.style[support.transition] = (oldTransitions[this] || null);\r\n                    });\r\n                }\r\n\r\n                if (typeof callback === 'function') { callback.apply(self); }\r\n                if (typeof nextCall === 'function') { nextCall(); }\r\n            };\r\n\r\n            if ((i > 0) && (transitionEnd) && ($.transit.useTransitionEnd)) {\r\n                // Use the 'transitionend' event if it's available.\r\n                bound = true;\r\n                self.bind(transitionEnd, cb);\r\n            } else {\r\n                // Fallback to timers if the 'transitionend' event isn't supported.\r\n                window.setTimeout(cb, i);\r\n            }\r\n\r\n            // Apply transitions.\r\n            self.each(function () {\r\n                if (i > 0) {\r\n                    this.style[support.transition] = transitionValue;\r\n                }\r\n                $(this).css(properties);\r\n            });\r\n        };\r\n\r\n        // Defer running. This allows the browser to paint any pending CSS it hasn't\r\n        // painted yet before doing the transitions.\r\n        var deferredRun = function (next) {\r\n            this.offsetWidth; // force a repaint\r\n            run(next);\r\n        };\r\n\r\n        // Use jQuery's fx queue.\r\n        callOrQueue(self, queue, deferredRun);\r\n\r\n        // Chainability.\r\n        return this;\r\n    };\r\n\r\n    function registerCssHook(prop, isPixels) {\r\n        // For certain properties, the 'px' should not be implied.\r\n        if (!isPixels) { $.cssNumber[prop] = true; }\r\n\r\n        $.transit.propertyMap[prop] = support.transform;\r\n\r\n        $.cssHooks[prop] = {\r\n            get: function (elem) {\r\n                var t = $(elem).css('transit:transform');\r\n                return t.get(prop);\r\n            },\r\n\r\n            set: function (elem, value) {\r\n                var t = $(elem).css('transit:transform');\r\n                t.setFromString(prop, value);\r\n\r\n                $(elem).css({ 'transit:transform': t });\r\n            }\r\n        };\r\n\r\n    }\r\n\r\n    // ### uncamel(str)\r\n    // Converts a camelcase string to a dasherized string.\r\n    // (`marginLeft` => `margin-left`)\r\n    function uncamel(str) {\r\n        return str.replace(/([A-Z])/g, function (letter) { return '-' + letter.toLowerCase(); });\r\n    }\r\n\r\n    // ### unit(number, unit)\r\n    // Ensures that number `number` has a unit. If no unit is found, assume the\r\n    // default is `unit`.\r\n    //\r\n    //     unit(2, 'px')          //=> \"2px\"\r\n    //     unit(\"30deg\", 'rad')   //=> \"30deg\"\r\n    //\r\n    function unit(i, units) {\r\n        if ((typeof i === \"string\") && (!i.match(/^[\\-0-9\\.]+$/))) {\r\n            return i;\r\n        } else {\r\n            return \"\" + i + units;\r\n        }\r\n    }\r\n\r\n    // ### toMS(duration)\r\n    // Converts given `duration` to a millisecond string.\r\n    //\r\n    //     toMS('fast')   //=> '400ms'\r\n    //     toMS(10)       //=> '10ms'\r\n    //\r\n    function toMS(duration) {\r\n        var i = duration;\r\n\r\n        // Allow for string durations like 'fast'.\r\n        if ($.fx.speeds[i]) { i = $.fx.speeds[i]; }\r\n\r\n        return unit(i, 'ms');\r\n    }\r\n\r\n    // Export some functions for testable-ness.\r\n    $.transit.getTransitionValue = getTransition;\r\n});\n","/* \r\n * EXPANDO\r\n * ===========================================\r\n * Expando lets you expand and collapse things, similar to jQuery's show, hide,\r\n * and toggle functions. Unlike those functions, it can:\r\n *\r\n * - Switch between an exerpt and full text\r\n * - Toggle CSS classes\r\n * - Use CSS3 animation\r\n * - Apply minimal inline CSS (set only display: none, not display: block)\r\n * - Offer a data attribute API and custom events (expando-collapse and expando-expand)\r\n * - Make coffee! (Ok, not really)\r\n * \r\n * Expando can be combined with togglr to build tabs, accordions, and the like\r\n * without using a heavy UI library such as jQuery UI.\r\n *\r\n * Expando will listen to togglr's activate/deactivate events if togglr is \r\n * available. In order to take advantage of this feature, call togglr before\r\n * calling expando, and make sure require loads both plugins.\r\n */\r\n\r\n; define('core/ef_plugins/expando',[\"jquery\", \"libs/jquery.transit\"], function (jQuery) {\r\n    (function ($, window, document, undefined) {\r\n\r\n        var pluginName = 'expando',\r\n            defaults = {\r\n                activeClass: 'is-active', // Class applied when to $element or the excerpt when it is shown.\r\n                animateClass: 'is-animating', // Class applied to the trigger and the target when togglr is animating.\r\n                animate: true, // Animate transition from excerpt to full text?\r\n                animateTime: 300, // Length of animation (in ms)\r\n                excerpt: \".js-expando-excerpt\", // Selector for excerpt to show when expando closed. Must be a sibling of the element on which expando is called.\r\n                trigger: \".js-expando-trigger\", // Selector for an element that will toggle the expando when clicked. Must be a sibling or parent of the element on which expando is called. Alternately, you could manually set up click listener and call .toggle() from in there.\r\n                useTogglr: true, // If the trigger uses the togglr plugin, use togglr events instead of the click event.\r\n            };\r\n\r\n        // ReSharper disable once InconsistentNaming\r\n        function Expando(element, options) {\r\n            this.element = element;\r\n            this.$element = $(element);\r\n            this.metadata = this.$element.data('expando-options');\r\n            this.options = $.extend({}, defaults, options, this.metadata);\r\n            this._defaults = defaults;\r\n            this._name = pluginName;\r\n            this.init();\r\n        }\r\n\r\n        Expando.prototype = {\r\n            init: function () {\r\n                var plugin = this,\r\n                    togglr;\r\n                // Find elements.\r\n                plugin.$excerpt = this.$element.siblings(plugin.options.excerpt);\r\n                plugin.$trigger = this.$element.siblings(plugin.options.trigger);\r\n                if (plugin.$trigger.length === 0) {\r\n                    plugin.$trigger = this.$element.parents(plugin.options.trigger);\r\n                }\r\n                // Set up event listeners.\r\n                togglr = plugin.$trigger.data('plugin_togglr');\r\n                if (togglr && plugin.options.useTogglr) {\r\n                    // Stay in sync with togglr state.\r\n                    plugin.$trigger.on('togglr-activate.expando', function () { plugin.expand(); });\r\n                    plugin.$trigger.on('togglr-deactivate.expando', function () { plugin.collapse(); });\r\n                } else {\r\n                    plugin.$trigger.on('click.expando', function () { plugin.toggle(); });\r\n                }\r\n                // Set collapsed state as the default.\r\n                plugin.expanded = false;\r\n                plugin.$element.css({ 'display': 'none' });\r\n            },\r\n\r\n            _animate: function(startHeight, endHeight, callback) {\r\n                var plugin = this;\r\n\r\n                if (typeof callback !== 'function') {\r\n                    callback = function() {};\r\n                }\r\n                if (!plugin.options.animate) {\r\n                    callback();\r\n                    return;\r\n                }\r\n\r\n                // Set up initial state.\r\n                plugin.$element\r\n                    .addClass(plugin.options.animateClass)\r\n                    .css({\r\n                        'overflow': 'hidden',\r\n                        'height': startHeight\r\n                    });\r\n                // Animate and call the callback.\r\n                plugin.$element.transition({ height: endHeight }, plugin.options.animateTime, function () {\r\n                    plugin.$element.css({\r\n                        'overflow': '',\r\n                        'height': '',\r\n                    });\r\n                    plugin.$element.removeClass(plugin.options.animateClass);\r\n                    callback();\r\n                });\r\n            },\r\n\r\n            expand: function () {\r\n                var plugin = this,\r\n                    startHeight,\r\n                    endHeight = plugin.$element.css('height');\r\n                if (plugin.expanded) {\r\n                    return false;\r\n                }\r\n\r\n                startHeight = (plugin.$excerpt.length === 0) ? 0 : plugin.$excerpt.css('height');\r\n                plugin.expanded = true;\r\n                plugin.$excerpt\r\n                    .removeClass(plugin.options.activeClass)\r\n                    .css({ 'display': 'none' });\r\n                plugin.$element\r\n                    .addClass(plugin.options.activeClass)\r\n                    .css({ 'display': '' })\r\n                    .trigger('expando-expand');\r\n                    \r\n                plugin._animate(startHeight, endHeight);\r\n                return true;\r\n            },\r\n\r\n            collapse: function () {\r\n                var plugin = this,\r\n                    startHeight = plugin.$element.css('height'),\r\n                    endHeight;\r\n                if (!plugin.expanded) {\r\n                    return false;\r\n                }\r\n\r\n                endHeight = (plugin.$excerpt.length === 0) ? 0 : plugin.$excerpt.css('height');\r\n                plugin.expanded = false;\r\n                plugin.$excerpt.addClass(plugin.options.activeClass);\r\n                plugin.$element\r\n                    .removeClass(plugin.options.activeClass)\r\n                    .trigger('expando-collapse');\r\n                \r\n                plugin._animate(startHeight, endHeight, function() {\r\n                    plugin.$element.css({ 'display': 'none' });\r\n                    plugin.$excerpt.css({ 'display': '' });\r\n                });\r\n                return true;\r\n            },\r\n\r\n            toggle: function() {\r\n                var plugin = this;\r\n                if (plugin.expanded) {\r\n                    plugin.collapse();\r\n                } else {\r\n                    plugin.expand();\r\n                }\r\n            },\r\n\r\n            destroy: function () {\r\n                var plugin = this;\r\n                // reset the markup\r\n                plugin.$element\r\n                    .removeClass(plugin.options.activeClass)\r\n                    .css({ 'display': '' });\r\n                plugin.$excerpt\r\n                    .removeClass(plugin.options.activeClass)\r\n                    .css({ 'display': '' });\r\n                // unbind the listeners\r\n                plugin.$trigger\r\n                    .off('togglr-activate.expando')\r\n                    .off('togglr-deactivate.expando')\r\n                    .off('click.expando');\r\n                // remove the data\r\n                plugin.$element.removeData('plugin_' + pluginName);\r\n            }\r\n\r\n        };\r\n\r\n        // Turn this into a jquery plugin & prevent multiple instantiations\r\n        $.fn[pluginName] = function (options) {\r\n            return this.each(function () {\r\n                if (!$.data(this, 'plugin_' + pluginName)) {\r\n                    $.data(this, 'plugin_' + pluginName,\r\n                        new Expando(this, options));\r\n                }\r\n            });\r\n        }\r\n\r\n    })(jQuery, window, document);\r\n});\n"]}