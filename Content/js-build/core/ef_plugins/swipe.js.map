{"version":3,"sources":["swipe.js"],"names":["define","$","console","log","window","Swipe","element","options","this","browser","addEventListener","touch","DocumentTouch","document","transitions","temp","props","i","undefined","style","createElement","index","startSlide","speed","callback","delay","auto","peek","getAttribute","peekSlideWidth","peekSlideSpacing","maxSlideWidth","positionIndicator","positionIndicatorChar","positionCounter","counter","positionCounterSpacer","arrows","arrowHolder","arrowsToEdge","arrowsToEdgeCutoff","container","children","listStyle","margin","slides","length","setupNav","setup","begin","prototype","containerWidth","getBoundingClientRect","width","offsetWidth","visibility","slideWidth","slideSpacing","elementWidth","paddingLeft","paddingRight","paddingTop","paddingBottom","el","marginRight","display","styleFloat","cssFloat","slide","setupArrowsToEdge","teardownArrowsToEdge","hasOrientationChanged","orientation","matchMedia","matches","nav","setAttribute","setupArrows","appendChild","prevArrow","nextArrow","setupPositioner","positioner","setupCounter","updateNav","setPositionerPosition","setCounterPosition","updateArrows","_this","createTextNode","onclick","next","prev","current","spacer","total","removeChild","firstChild","len","plugin","position","positionText","siblings","parentNode","childNodes","Array","indexOf","call","gotoSlide","positions","className","posRight","Math","ceil","outerWidth","offset","left","posLeft","css","addClass","removeClass","duration","webkitTransitionDuration","MozTransitionDuration","msTransitionDuration","OTransitionDuration","transitionDuration","maxposition","MozTransform","webkitTransform","msTransform","OTransform","marginLeft","getPos","clearTimeout","interval","targetIndex","setTimeout","stop","resume","handleEvent","e","type","onTouchStart","onTouchMove","onTouchEnd","transitionEnd","start","pageX","touches","pageY","time","Number","Date","isScrolling","deltaX","stopPropagation","scale","abs","preventDefault","isValidSlide","isPastBounds","kill","padding","pos","height","removeEventListener","onresize","data","fn","params","each"],"mappings":"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":"core/ef_plugins/swipe.js","sourcesContent":["/*\r\n* Swipe 1.0\r\n*\r\n* Brad Birdsall, Prime\r\n* Copyright 2011, Licensed GPL & MIT\r\n* swipejs.com\r\n*\r\n* This version of swipe has been modified for use at EF.\r\n* New features include \"peek\" and a \"kill\" method.\r\n* This version differs from Swipe 2.0.\r\n* v1.0 docs: https://github.com/bradbirdsall/Swipe/blob/67928de65e805062f341ca6cf6d14ec16b19eaf3/README.md\r\n*\r\n* The setSameHeightSlides has been moved to a standalone plugin, $.equalHeight.\r\n*/\r\ndefine('core/ef_plugins/swipe',[\"jquery\"], function($) {\r\n    console.log(\"swipe\");\r\n    window.Swipe = function(element, options) {\r\n\r\n        // return immediately if element doesn't exist\r\n        if (!element) return null;\r\n\r\n        var _this = this;\r\n\r\n        // check browser capabilities - from Swipe 2.0\r\n        this.browser = {\r\n            addEventListener: !!window.addEventListener,\r\n            touch: ('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch,\r\n            transitions: (function(temp) {\r\n                var props = ['transitionProperty', 'WebkitTransition', 'MozTransition', 'OTransition', 'msTransition'];\r\n                for (var i in props) if (temp.style[props[i]] !== undefined) return true;\r\n                return false;\r\n            })(document.createElement('swipe'))\r\n        };\r\n\r\n        // retreive options\r\n        this.options = options || {};\r\n        this.index = this.options.startSlide || 0;\r\n        this.speed = this.options.speed || 300;\r\n        this.callback = this.options.callback || function() {};\r\n        this.delay = this.options.auto || 0;\r\n        this.peek = this.options.peek || element.getAttribute('data-swipe-peek') === \"true\" || false;\r\n        this.peekSlideWidth = 0.85; // Percentage of parent as decimal\r\n        this.peekSlideSpacing = 15; // static pixel width between each peeking slide\r\n        this.maxSlideWidth = 350; // static maximum pixel width for each slide\r\n        this.positionIndicator = this.options.positionIndicator || element.getAttribute('data-swipe-position-indicator') === \"true\" || false;\r\n        this.positionIndicatorChar = '\\u2022';\r\n        this.positionCounter = this.options.counter || element.getAttribute('data-swipe-position-counter') === \"true\" || false;\r\n        this.positionCounterSpacer = this.options.positionCounterSpacer || element.getAttribute('data-swipe-position-counter-spacer') || \" of \";\r\n        this.arrows = this.options.arrows || element.getAttribute('data-swipe-arrows') === \"true\" || false;\r\n        this.arrowHolder = this.options.arrowHolder || null; // Element to which we add the arrow nav. If null, add arrows to this.nav.\r\n        this.arrowsToEdge = this.options.arrowsToEdge; // Should arrows \"stick\" to edge of window?\r\n        this.arrowsToEdgeCutoff = this.options.arrowsToEdgeCutoff || 580; // At or below this width, arrows will not stick to edge of window, even if arrowsToEdge is true.\r\n        // reference dom elements\r\n        this.container = element;\r\n        this.element = this.container.children[0]; // the slide pane\r\n\r\n        // static css\r\n        this.element.style.listStyle = 'none';\r\n        this.element.style.margin = 0;\r\n\r\n        // get and measure amt of slides\r\n        this.slides = this.element.children;\r\n        this.length = this.slides.length;\r\n\r\n        // return immediately if their are less than two slides\r\n        // moved this up here from setup to avoid listeners and solve error when only 1 slide exists\r\n        if (this.length < 2) return null;\r\n\r\n        if (this.positionIndicator || this.positionCounter || this.arrows) this.setupNav();\r\n\r\n        // trigger slider initialization\r\n        this.setup();\r\n\r\n        // begin auto slideshow\r\n        this.begin();\r\n\r\n        // add event listeners\r\n        if (this.browser.addEventListener) {\r\n            this.element.addEventListener('touchstart', this, false);\r\n            this.element.addEventListener('touchmove', this, false);\r\n            this.element.addEventListener('touchend', this, false);\r\n            this.element.addEventListener('webkitTransitionEnd', this, false);\r\n            this.element.addEventListener('msTransitionEnd', this, false);\r\n            this.element.addEventListener('oTransitionEnd', this, false);\r\n            this.element.addEventListener('transitionend', this, false);\r\n            window.addEventListener('resize', this, false);\r\n        }\r\n\r\n\r\n    };\r\n\r\n    Swipe.prototype = {\r\n        setup: function() {\r\n\r\n            var _this = this;\r\n\r\n// determine width of each slide\r\n            this.containerWidth = this.container.getBoundingClientRect().width || this.container.offsetWidth;\r\n\r\n            // return immediately if measurement fails\r\n            if (!this.containerWidth) return null;\r\n\r\n            // hide slider element but keep positioning during setup\r\n            this.container.style.visibility = 'hidden';\r\n\r\n\r\n            // calculate the width of each slide\r\n            this.slideWidth = this.peek ? this.containerWidth * this.peekSlideWidth : this.containerWidth;\r\n            this.slideWidth = this.slideWidth > this.maxSlideWidth ? this.maxSlideWidth : this.slideWidth;\r\n            this.slideSpacing = this.peek ? this.peekSlideSpacing : 0; // Makes it easier later on when sliding to call this variable regardless\r\n            this.elementWidth = this.slides.length * (this.slideWidth + this.slideSpacing);\r\n\r\n            // calculate the width of the wrap element\r\n            this.element.style.width = this.elementWidth + 'px';\r\n            this.element.style.paddingLeft = this.slideSpacing + 'px';\r\n            this.element.style.paddingRight = this.slideSpacing + 'px';\r\n            this.element.style.paddingTop = 0;\r\n            this.element.style.paddingBottom = 0;\r\n\r\n            // set the width used for calculating slide distances\r\n            this.width = this.slideWidth + this.slideSpacing;\r\n\r\n            var el, index = this.length;\r\n\r\n            // set style of each slide\r\n            while (index--) {\r\n                el = this.slides[index];\r\n                el.style.width = this.slideWidth + 'px';\r\n                if (index != this.length - 1) el.style.marginRight = this.slideSpacing + 'px';\r\n                el.style.display = 'block'; //'table-cell';\r\n                el.style.styleFloat = 'left';\r\n                el.style.cssFloat = 'left';\r\n            }\r\n\r\n            // set start position and force translate to remove initial flickering\r\n            this.slide(this.index, 0);\r\n\r\n            // show slider element\r\n            this.container.style.visibility = 'visible';\r\n\r\n            if (this.arrows && this.arrowsToEdge && ($(window).width() > this.arrowsToEdgeCutoff)) {\r\n                this.setupArrowsToEdge();\r\n            } else {\r\n                this.teardownArrowsToEdge();\r\n            }\r\n\r\n            \r\n\r\n        },\r\n\r\n        hasOrientationChanged: function (window) {\r\n            // check for browser orientation change\r\n            var orientation = window.orientation;\r\n\r\n            if (window.matchMedia(\"(orientation: portrait)\").matches && orientation !== 'portrait') {\r\n         \r\n                window.orientation = 'portrait';\r\n                console.log(window.orientation);\r\n                this.setup();\r\n            }\r\n\r\n            if (window.matchMedia(\"(orientation: landscape)\").matches && orientation !== 'landscape') {\r\n               \r\n                window.orientation = 'landscape';\r\n                console.log(window.orientation);\r\n                      this.setup();\r\n            }\r\n\r\n\r\n\r\n        },\r\n\r\n        setupNav: function() {\r\n            // get and measure amt of slides\r\n            this.slides = this.element.children;\r\n            this.length = this.slides.length;\r\n\r\n            // return immediately if their are less than two slides\r\n            if (this.length < 2) return null;\r\n\r\n            // create nav wrapping element\r\n            this.nav = document.createElement('div');\r\n            this.nav.setAttribute('class', 'swipe-nav');\r\n\r\n\r\n            // Figure out where to place the arrows\r\n            if (!this.arrowHolder) { // If this.arrowHolderId is null or undefined, use this.nav instead.\r\n                this.arrowHolder = this.nav;\r\n            }\r\n\r\n            if (this.arrows) {\r\n                this.setupArrows();\r\n                this.arrowHolder.appendChild(this.prevArrow);\r\n                this.arrowHolder.appendChild(this.nextArrow);\r\n            }\r\n\r\n            if (this.positionIndicator) {\r\n                this.setupPositioner();\r\n                this.nav.appendChild(this.positioner);\r\n            }\r\n\r\n            if (this.positionCounter) {\r\n                this.setupCounter();\r\n                this.nav.appendChild(this.counter);\r\n            }\r\n\r\n            this.container.appendChild(this.nav);\r\n        },\r\n\r\n        updateNav: function(index) {\r\n            if (this.positionIndicator) this.setPositionerPosition(index);\r\n            if (this.positionCounter) this.setCounterPosition(index);\r\n            if (this.arrows) this.updateArrows(index);\r\n        },\r\n\r\n        setupArrows: function() {\r\n            var _this = this;\r\n            this.nextArrow = document.createElement('a');\r\n            this.nextArrow.setAttribute('class', 'swipe-next-arrow');\r\n            this.nextArrow.appendChild(document.createTextNode('>'));\r\n            this.nextArrow.onclick = function() { _this.next(); };\r\n\r\n            this.prevArrow = document.createElement('a');\r\n            this.prevArrow.setAttribute('class', 'swipe-prev-arrow');\r\n            this.prevArrow.appendChild(document.createTextNode('<'));\r\n            this.prevArrow.onclick = function() { _this.prev(); };\r\n\r\n            this.updateArrows(this.index);\r\n        },\r\n\r\n        updateArrows: function(index) {\r\n            if (index == 0) {\r\n                this.prevArrow.style.visibility = 'hidden';\r\n                this.nextArrow.style.visibility = 'visible';\r\n            } else if (index == this.length - 1) {\r\n                this.prevArrow.style.visibility = 'visible';\r\n                this.nextArrow.style.visibility = 'hidden';\r\n            } else {\r\n                this.prevArrow.style.visibility = 'visible';\r\n                this.nextArrow.style.visibility = 'visible';\r\n            }\r\n        },\r\n\r\n        setupCounter: function() {\r\n            this.counter = document.createElement('div');\r\n            this.counter.setAttribute('class', 'swipe-counter');\r\n\r\n            // span to hold current slide number\r\n            this.counter.current = document.createElement('span');\r\n            this.counter.current.setAttribute('class', 'swipe-counter-current');\r\n            this.counter.current.appendChild(document.createTextNode(this.index + 1));\r\n\r\n            // span to hold spacer text\r\n            this.counter.spacer = document.createElement('span');\r\n            this.counter.spacer.setAttribute('class', 'swipe-counter-spacer');\r\n            this.counter.spacer.appendChild(document.createTextNode(this.positionCounterSpacer));\r\n\r\n            // span to hold total slide number\r\n            this.counter.total = document.createElement('span');\r\n            this.counter.total.setAttribute('class', 'swipe-counter-total');\r\n            this.counter.total.appendChild(document.createTextNode(this.length));\r\n\r\n            // add em all in\r\n            this.counter.appendChild(this.counter.current);\r\n            this.counter.appendChild(this.counter.spacer);\r\n            this.counter.appendChild(this.counter.total);\r\n        },\r\n\r\n        setCounterPosition: function(index) {\r\n            this.counter.current.removeChild(this.counter.current.firstChild);\r\n            this.counter.current.appendChild(document.createTextNode(index + 1));\r\n        },\r\n\r\n        setupPositioner: function() {\r\n            // create position element\r\n            this.positioner = document.createElement('div');\r\n            this.positioner.setAttribute('class', 'swipe-position');\r\n\r\n            var len = this.length,\r\n                plugin = this;\r\n            while (len--) {\r\n                var position = document.createElement('span'),\r\n                    positionText = document.createTextNode(this.positionIndicatorChar);\r\n                position.appendChild(positionText);\r\n                position.addEventListener('click', function(len) {\r\n                    // In order to use array methods on a node list, some gymnastics\r\n                    // are necessary: http://stackoverflow.com/a/9132575/925475\r\n                    // This won't work in IE <= 9. A jQuery equivalent would.\r\n                    var siblings = this.parentNode.childNodes,\r\n                        index = Array.prototype.indexOf.call(siblings, this);\r\n                    plugin.gotoSlide(index);\r\n                }, false);\r\n                this.positioner.appendChild(position);\r\n            }\r\n            // set position\r\n            this.setPositionerPosition(this.index);\r\n        },\r\n\r\n        setPositionerPosition: function(index) {\r\n            var positions = this.positioner.children,\r\n                i = positions.length;\r\n            while (i--) {\r\n                positions[i].className = ' ';\r\n            }\r\n            positions[index].className = 'swipe-position-current';\r\n        },\r\n\r\n        setupArrowsToEdge: function() {\r\n            /* Position the arrows at the edge of the window, even if they are within a container with position: relative.\r\n            *  jQuery dependency ahoy!\r\n            *  window.innerWidth isn't supported in IE8, and document.body.clientWidth is unreliable.\r\n            *  So, we're using $.width instead. More info: http://stackoverflow.com/questions/833699/ */\r\n            var posRight = Math.ceil($(window).width() - $(this.arrowHolder).outerWidth() - $(this.arrowHolder).offset().left) * -1;\r\n            var posLeft = Math.ceil($(this.arrowHolder).offset().left) * -1;\r\n            $(this.nextArrow).css('right', posRight + 'px');\r\n            $(this.prevArrow).css('left', posLeft + 'px');\r\n            $(this.arrowHolder).addClass('swipe-arrows-to-edge');\r\n        },\r\n\r\n        teardownArrowsToEdge: function() {\r\n            if (this.arrows) {\r\n                $(this.nextArrow).css('right', '');\r\n                $(this.prevArrow).css('left', '');\r\n                $(this.arrowHolder).removeClass('swipe-arrows-to-edge');\r\n            }\r\n        },\r\n\r\n        slide: function(index, duration) {\r\n\r\n            var style = this.element.style;\r\n\r\n            // fallback to default speed\r\n            if (duration == undefined) {\r\n                duration = this.speed;\r\n            }\r\n\r\n            // set duration speed (0 represents 1-to-1 scrolling)\r\n            style.webkitTransitionDuration = style.MozTransitionDuration = style.msTransitionDuration = style.OTransitionDuration = style.transitionDuration = duration + 'ms';\r\n\r\n            // translate to given index position\r\n            // max position is element width - width\r\n            var position = index * this.width,\r\n                maxposition = this.elementWidth - this.containerWidth + this.slideSpacing;\r\n            if (position > maxposition) position = maxposition;\r\n            style.MozTransform = style.webkitTransform = 'translate3d(' + -(position) + 'px,0,0)';\r\n            style.msTransform = style.OTransform = 'translateX(' + -(position) + 'px)';\r\n\r\n            if (!this.browser.transitions) {\r\n                this.element.style.marginLeft = -(position) + 'px';\r\n            }\r\n\r\n            // set new index to allow for expression arguments\r\n            this.index = index;\r\n\r\n            // update navigation\r\n            if (this.positionIndicator || this.positionCounter || this.arrows) this.updateNav(index);\r\n\r\n\r\n        },\r\n\r\n        getPos: function() {\r\n\r\n            // return current index position\r\n            return this.index;\r\n\r\n        },\r\n\r\n        prev: function(delay) {\r\n\r\n            // cancel next scheduled automatic transition, if any\r\n            this.delay = delay || 0;\r\n            clearTimeout(this.interval);\r\n\r\n            // if not at first slide\r\n            if (this.index) this.slide(this.index - 1, this.speed);\r\n\r\n        },\r\n\r\n        next: function(delay) {\r\n\r\n            // cancel next scheduled automatic transition, if any\r\n            this.delay = delay || 0;\r\n            clearTimeout(this.interval);\r\n\r\n            if (this.index < this.length - 1) this.slide(this.index + 1, this.speed); // if not last slide\r\n            else this.slide(0, this.speed); //if last slide return to start\r\n\r\n        },\r\n\r\n        gotoSlide: function(targetIndex, delay) {\r\n            // cancel next scheduled automatic transition, if any\r\n            this.delay = delay || 0;\r\n            clearTimeout(this.interval);\r\n            if (targetIndex >= 0 && targetIndex < this.length && targetIndex != this.index) {\r\n                // If targetIndex is a valid slide index and isn't the current slide, go to the slide\r\n                this.slide(targetIndex, this.speed);\r\n            }\r\n\r\n        },\r\n\r\n        begin: function() {\r\n\r\n            var _this = this;\r\n\r\n            this.interval = (this.delay)\r\n                ? setTimeout(function() {\r\n                    _this.next(_this.delay);\r\n                }, this.delay)\r\n                : 0;\r\n\r\n        },\r\n\r\n        stop: function() {\r\n            this.delay = 0;\r\n            clearTimeout(this.interval);\r\n        },\r\n\r\n        resume: function() {\r\n            this.delay = this.options.auto || 0;\r\n            this.begin();\r\n        },\r\n\r\n        handleEvent: function (e) {\r\n            switch (e.type) {\r\n            case 'touchstart':\r\n                this.onTouchStart(e);\r\n                break;\r\n            case 'touchmove':\r\n                this.onTouchMove(e);\r\n                break;\r\n            case 'touchend':\r\n                this.onTouchEnd(e);\r\n                break;\r\n            case 'webkitTransitionEnd':\r\n            case 'msTransitionEnd':\r\n            case 'oTransitionEnd':\r\n            case 'transitionend':\r\n                this.transitionEnd(e);\r\n                break;\r\n                case 'resize':\r\n                    this.hasOrientationChanged(window); // we might resize but not change orientation\r\n                break;\r\n          \r\n                \r\n            }\r\n        },\r\n\r\n        transitionEnd: function(e) {\r\n\r\n            if (this.delay) this.begin();\r\n\r\n            this.callback(e, this.index, this.slides[this.index]);\r\n\r\n        },\r\n\r\n        onTouchStart: function (e) {\r\n\r\n            this.start = {\r\n\r\n                // get touch coordinates for delta calculations in onTouchMove\r\n                pageX: e.touches[0].pageX,\r\n                pageY: e.touches[0].pageY,\r\n\r\n                // set initial timestamp of touch sequence\r\n                time: Number(new Date())\r\n\r\n            };\r\n\r\n            // used for testing first onTouchMove event\r\n            this.isScrolling = undefined;\r\n\r\n            // reset deltaX\r\n            this.deltaX = 0;\r\n\r\n            // set transition time to 0 for 1-to-1 touch movement\r\n            this.element.style.MozTransitionDuration = this.element.style.webkitTransitionDuration = 0;\r\n\r\n            e.stopPropagation();\r\n        },\r\n\r\n        onTouchMove: function (e) {\r\n\r\n            // ensure swiping with one touch and not pinching\r\n            if (e.touches.length > 1 || e.scale && e.scale !== 1) return;\r\n\r\n            this.deltaX = e.touches[0].pageX - this.start.pageX;\r\n\r\n            // determine if scrolling test has run - one time test\r\n            if (typeof this.isScrolling == 'undefined') {\r\n                this.isScrolling = !!(this.isScrolling || Math.abs(this.deltaX) < Math.abs(e.touches[0].pageY - this.start.pageY));\r\n            }\r\n\r\n            // if user is not trying to scroll vertically\r\n            if (!this.isScrolling) {\r\n\r\n                // prevent native scrolling \r\n                e.preventDefault();\r\n\r\n                // cancel slideshow\r\n                clearTimeout(this.interval);\r\n\r\n                // increase resistance if first or last slide\r\n                this.deltaX =\r\n                    this.deltaX /\r\n                    ((!this.index && this.deltaX > 0 // if first slide and sliding left\r\n                                || this.index == this.length - 1 // or if last slide and sliding right\r\n                                && this.deltaX < 0 // and if sliding at all\r\n                        ) ?\r\n                        (Math.abs(this.deltaX) / this.width + 1) // determine resistance level\r\n                        : 1); // no resistance if false\r\n\r\n                // translate immediately 1-to-1\r\n                this.element.style.MozTransform = this.element.style.webkitTransform = 'translate3d(' + (this.deltaX - this.index * this.width) + 'px,0,0)';\r\n\r\n                e.stopPropagation();\r\n            }\r\n\r\n        },\r\n\r\n        onTouchEnd: function(e) {\r\n\r\n            // determine if slide attempt triggers next/prev slide\r\n            var isValidSlide =\r\n                    Number(new Date()) - this.start.time < 250 // if slide duration is less than 250ms\r\n                        && Math.abs(this.deltaX) > 20 // and if slide amt is greater than 20px\r\n                        || Math.abs(this.deltaX) > this.width / 2, // or if slide amt is greater than half the width\r\n\r\n                // determine if slide attempt is past start and end\r\n                isPastBounds =\r\n                    !this.index && this.deltaX > 0 // if first slide and slide amt is greater than 0\r\n                        || this.index == this.length - 1 && this.deltaX < 0; // or if last slide and slide amt is less than 0\r\n\r\n            // if not scrolling vertically\r\n            if (!this.isScrolling) {\r\n\r\n                // call slide function with slide end value based on isValidSlide and isPastBounds tests\r\n                this.slide(this.index + (isValidSlide && !isPastBounds ? (this.deltaX < 0 ? 1 : -1) : 0), this.speed);\r\n\r\n            }\r\n\r\n            e.stopPropagation();\r\n        },\r\n        kill: function() { // Adapted from Swipe 2.0\r\n\r\n            // cancel slideshow\r\n            this.stop();\r\n\r\n            // reset element\r\n            this.element.style.width = '';\r\n            this.element.style.padding = '';\r\n            this.element.style.left = '';\r\n            this.element.style.listStyle = '';\r\n            this.element.style.margin = '';\r\n\r\n            if (this.browser.transitions) {\r\n                this.element.style.MozTransform = this.element.style.webkitTransform = 'translate3d(0,0,0)';\r\n                this.element.style.msTransform = this.element.style.OTransform = 'translateX(0)';\r\n            };\r\n\r\n            // reset slides\r\n            var pos = this.slides.length;\r\n            while (pos--) {\r\n\r\n                var slide = this.slides[pos];\r\n                slide.style.width = '';\r\n                slide.style.height = '';\r\n                slide.style.marginRight = '';\r\n                slide.style.left = '';\r\n                slide.style.styleFloat = '';\r\n                slide.style.cssFloat = '';\r\n                slide.style.display = '';\r\n\r\n                if (this.browser.transitions) {\r\n                    slide.style.MozTransform = slide.style.webkitTransform = 'translate3d(0,0,0)';\r\n                    slide.style.msTransform = slide.style.OTransform = 'translateX(0)';\r\n                };\r\n\r\n            }\r\n\r\n            // removed event listeners\r\n            if (this.browser.addEventListener) {\r\n\r\n                // remove current event listeners\r\n                this.element.removeEventListener('touchstart', this, false);\r\n                this.element.removeEventListener('touchmove', this, false);\r\n                this.element.removeEventListener('touchend', this, false);\r\n                this.element.removeEventListener('webkitTransitionEnd', this, false);\r\n                this.element.removeEventListener('msTransitionEnd', this, false);\r\n                this.element.removeEventListener('oTransitionEnd', this, false);\r\n                this.element.removeEventListener('otransitionend', this, false);\r\n                this.element.removeEventListener('transitionend', this, false);\r\n                window.removeEventListener('resize', this, false);\r\n\r\n            } else {\r\n                // TODO: will this unbind the event handlers in global.js?\r\n                window.onresize = null;\r\n            }\r\n            if (this.nav) {\r\n                this.nav.parentNode.removeChild(this.nav);\r\n            }\r\n            $(this.container).data('Swipe', null);\r\n        }\r\n    };\r\n\r\n    // bridge to jquery plugin\r\n    $.fn.Swipe = function(params) {\r\n        return this.each(function() {\r\n            var _this = $(this);\r\n            _this.data('Swipe', new Swipe(_this[0], params));\r\n        });\r\n    }\r\n});\n"]}