{"version":3,"sources":["../../libs/jquery.waypoints-sticky.js","leadgen.js"],"names":["console","log","root","factory","define","amd","jQuery","this","$","defaults","wrap","wrapper","stuckClass","$elements","options","parent","waypoints","opt","$wrap","originalHandler","extend","fn","waypoint","handler","direction","$sticky","shouldBeStuck","children","height","outerHeight","toggleClass","call","data","unwrap","removeClass","state","me","ns","stickyGlass","applyStickToSubnavOnDesktop","window","innerWidth","stickSubNav","removeClassesAndBodyPadding","document","body","style","paddingTop","classList","remove","subnav","scrollY","spaceAboveSubnav","add","querySelector","main","offsetTop","EFTOURS","device","isTouch","addEventListener","tourSubnav","$subnavLinks","offset","innerHeight","hasClass","click","event","preventDefault","$thisLink","closest","$activeLink","attr","addClass","animate","scrollTop","top","expandoForm","$expandoForm","$expandoTrigger","$expandoCheckbox","e","$target","target","isCheckbox","is","slideToggle","stopPropagation","prop","leadgen"],"mappings":"AAAA,AAOAA,QAAAC,IAAA,UAEA,YACA,SAAAC,EAAAC,GACA,MAAA,kBAAAC,SAAAA,OAAAC,IACAD,OAAA,gCAAA,SAAA,aAAAD,GAEAA,EAAAD,EAAAI,SAEAC,KAAA,SAAAC,GACA,GAAAC,GAAAC,CA8BA,OA5BAD,IACAE,QAAA,iCACAC,WAAA,SAEAF,EAAA,SAAAG,EAAAC,GAEA,MADAD,GAAAH,KAAAI,EAAAH,SACAE,EAAAE,UAEAP,EAAAQ,UAAA,WAAA,SAAA,SAAAC,GACA,GAAAC,GAAAJ,EAAAK,CAiBA,OAfAL,GAAAN,EAAAY,UAAAZ,EAAAa,GAAAC,SAAAb,SAAAA,EAAAQ,GACAC,EAAAR,EAAAH,KAAAO,GACAK,EAAAL,EAAAS,QACAT,EAAAS,QAAA,SAAAC,GACA,GAAAC,GAAAC,CAMA,OAJAD,GAAAjB,EAAAD,MAAAoB,SAAA,UACAD,EAAA,SAAAF,GAAA,UAAAA,EACAN,EAAAU,OAAAF,EAAAD,EAAAI,cAAA,IACAJ,EAAAK,YAAAhB,EAAAF,WAAAc,GACA,MAAAP,EACAA,EAAAY,KAAAxB,KAAAiB,GADA,QAIAN,EAAAI,SAAAR,GACAP,KAAAyB,KAAA,aAAAlB,EAAAF,cAEAJ,EAAAQ,UAAA,WAAA,WAAA,WAGA,MAFAT,MAAAQ,SAAAO,SAAA,WACAf,KAAA0B,SACA1B,KAAA2B,YAAA3B,KAAAyB,KAAA,oBAIAD,KAAAxB,MACAH,OAAA,uBAAA,SAAA,oBAAA,YAAA,gCAAA,SAAAI,EAAA2B,GCtDAnC,QAAAC,IAAA,iBAGA,IAAAmC,GAAA,SAAAC,GAiGA,MA9FAA,GAAAC,YAAA,WAQA,QAAAC,KACAC,OAAAC,WAAA,KACAC,IAEAC,IAIA,QAAAA,KACAC,SAAAC,KAAAC,MAAAC,WAAA,MACAH,SAAAC,KAAAG,UAAAC,OAAA,YACAC,EAAAF,UAAAC,OAAA,SAGA,QAAAP,KACAF,OAAAW,SAAAC,GACAR,SAAAC,KAAAG,UAAAK,IAAA,YACAH,EAAAF,UAAAK,IAAA,SACAH,EAAAJ,MAAAlB,OAAA,QAEAe,IAxBA,GAAAO,GAAAN,SAAAU,cAAA,oBACAC,EAAAX,SAAAU,cAAA,SACAF,EAAAG,EAAAC,UAAAN,EAAAM,SA4BAC,SAAAC,OAAAC,UACAnB,OAAAoB,iBAAA,SAAArB,GACAC,OAAAoB,iBAAA,SAAArB,KAKAF,EAAAwB,WAAA,WAGA,GAAAC,GAAAtD,EAAA,6BAEAA,GAAA,cAAAc,SAAA,SAAAE,MAKAuC,OAAAvD,EAAA,oBAAAwD,gBACA1C,SAAA,SAAAE,GACA,OAAAA,IACAhB,EAAA,QAAAyD,SAAA,aACAH,EAAA5B,YAAA,aAGA6B,OAAAvD,EAAA,oBAAAwD,cAAA,IAIAxD,EAAA,6BAAA0D,MAAA,SAAAC,GACAA,EAAAC,iBACAN,EAAA5B,YAAA,SACA,IAAAmC,GAAA7D,EAAAD,MAAA+D,QAAA,MACAC,EAAA/D,EAAA6D,GAAAG,KAAA,KACA,KAAAD,IACAT,EAAA5B,YAAA,UACA1B,EAAA6D,GAAAI,SAAA,WAEAjE,EAAA,cAAAkE,SAAAC,UAAAnE,EAAAA,EAAAD,MAAAiE,KAAA,SAAAT,SAAAa,IAAApE,EAAA,oBAAAwD,eAAA,QAIA3B,EAAAwC,YAAA,WACA,GAAAC,GAAAtE,EAAA,0BACAuE,EAAAvE,EAAA,kCACAwE,EAAAxE,EAAA,wDACAA,GAAAuE,GAAAb,MAAA,SAAAe,GACA,GAAAC,GAAA1E,EAAAyE,EAAAE,QACAC,EAAAF,EAAAG,GAAAL,EACAF,GAAAQ,cACAF,IACAH,EAAAM,kBACAN,EAAAb,iBACA5D,EAAAwE,GAAAK,GAAA,YACA7E,EAAAwE,GAAAQ,KAAA,WAAA,GAEAhF,EAAAwE,GAAAQ,KAAA,WAAA,OAKAnD,GACAG,OAAAiB,QAAAgC,YAEA,OAAArD;ADvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"core/global/leadgen.js","sourcesContent":["// Generated by CoffeeScript 1.6.2\r\n/*\r\nSticky Elements Shortcut for jQuery Waypoints - v2.0.4\r\nCopyright (c) 2011-2014 Caleb Troughton\r\nDual licensed under the MIT license and GPL license.\r\nhttps://github.com/imakewebthings/jquery-waypoints/blob/master/licenses.txt\r\n*/\r\nconsole.log(\"sticky\");\r\n\r\n(function () {\r\n    (function (root, factory) {\r\n        if (typeof define === 'function' && define.amd) {\r\n            return define('libs/jquery.waypoints-sticky',['jquery', 'waypoints'], factory);\r\n        } else {\r\n            return factory(root.jQuery);\r\n        }\r\n    })(this, function ($) {\r\n        var defaults, wrap;\r\n\r\n        defaults = {\r\n            wrapper: '<div class=\"sticky-wrapper\" />',\r\n            stuckClass: 'stuck'\r\n        };\r\n        wrap = function ($elements, options) {\r\n            $elements.wrap(options.wrapper);\r\n            return $elements.parent();\r\n        };\r\n        $.waypoints('extendFn', 'sticky', function (opt) {\r\n            var $wrap, options, originalHandler;\r\n\r\n            options = $.extend({}, $.fn.waypoint.defaults, defaults, opt);\r\n            $wrap = wrap(this, options);\r\n            originalHandler = options.handler;\r\n            options.handler = function (direction) {\r\n                var $sticky, shouldBeStuck;\r\n\r\n                $sticky = $(this).children(':first');\r\n                shouldBeStuck = direction === 'down' || direction === 'right';\r\n                $wrap.height(shouldBeStuck ? $sticky.outerHeight() : '');\r\n                $sticky.toggleClass(options.stuckClass, shouldBeStuck);\r\n                if (originalHandler != null) {\r\n                    return originalHandler.call(this, direction);\r\n                }\r\n            };\r\n            $wrap.waypoint(options);\r\n            return this.data('stuckClass', options.stuckClass);\r\n        });\r\n        return $.waypoints('extendFn', 'unsticky', function () {\r\n            this.parent().waypoint('destroy');\r\n            this.unwrap();\r\n            return this.removeClass(this.data('stuckClass'));\r\n        });\r\n    });\r\n\r\n}).call(this);\n","define('core/global/leadgen',[\"jquery\", \"core/global/state\", \"waypoints\", \"libs/jquery.waypoints-sticky\"], function ($, state) {\r\n    console.log('global/leadgen');\r\n\r\n    // This file needs to pull in some vars that are set in _Layout, so using loose module pattern coupling \r\n    var me = (function (ns) {\r\n\r\n        // The sticky bar JS\r\n        ns.stickyGlass = function() {\r\n             \r\n             //Find the subnav container.  Then find its parent container to calculate the pixel\r\n             // distance from the top of the body to the top of the subnav.\r\n             var subnav = document.querySelector('.cta-stage-glass');\r\n             var main = document.querySelector('#main');\r\n             var spaceAboveSubnav = main.offsetTop + subnav.offsetTop;\r\n\r\n             function applyStickToSubnavOnDesktop() {\r\n                 if (window.innerWidth > 1024) {\r\n                    stickSubNav();\r\n                } else {\r\n                    removeClassesAndBodyPadding();\r\n                }\r\n             }\r\n\r\n             function removeClassesAndBodyPadding() {\r\n                 document.body.style.paddingTop = '0px';\r\n                 document.body.classList.remove('is-stuck');\r\n                 subnav.classList.remove('stuck');\r\n             }\r\n  \r\n             function stickSubNav() {\r\n                 if (window.scrollY >= spaceAboveSubnav) {\r\n                     document.body.classList.add('is-stuck');\r\n                     subnav.classList.add('stuck');\r\n                     subnav.style.height = '64px';\r\n                 } else {\r\n                     removeClassesAndBodyPadding();\r\n                 }\r\n             }\r\n\r\n            \r\n            // Copied from subnav.js\r\n            if (!EFTOURS.device.isTouch) {\r\n                window.addEventListener('resize', applyStickToSubnavOnDesktop); \r\n                window.addEventListener('scroll', applyStickToSubnavOnDesktop);  \r\n            }\r\n        };\r\n        \r\n        // The tour page subnav JS\r\n        ns.tourSubnav = function () {\r\n\r\n            // Let's create the highlighting of subnav items as we scroll\r\n            var $subnavLinks = $(\".cta-stage-glass-subnav li\");\r\n            \r\n            $(\".tour-name\").waypoint(function (direction) {\r\n                if (direction === 'down') {\r\n\r\n                }\r\n            }, {\r\n                offset: $(\".cta-stage-glass\").innerHeight()\r\n            }).waypoint(function (direction) {\r\n                if (direction === 'up') {\r\n                    if (!$(\"body\").hasClass(\"is-stuck\"))\r\n                        $subnavLinks.removeClass(\"active\");\r\n                }\r\n            }, {\r\n                offset: $(\".cta-stage-glass\").innerHeight() - 5\r\n            });\r\n\r\n            // And then let's create the scrolling effect\r\n            $(\".cta-stage-glass-subnav a\").click(function (event) {\r\n                event.preventDefault();\r\n                $subnavLinks.removeClass(\"active\");\r\n                var $thisLink = $(this).closest(\"li\");\r\n                var $activeLink = $($thisLink).attr(\"id\");\r\n                if ($activeLink != '') {\r\n                    $subnavLinks.removeClass(\"active\");\r\n                    $($thisLink).addClass(\"active\");\r\n                }\r\n                $('html, body').animate({ scrollTop: $($(this).attr(\"href\")).offset().top - $(\".cta-stage-glass\").innerHeight()}, 1000);\r\n            });\r\n        };\r\n\r\n        ns.expandoForm = function () {\r\n            var $expandoForm = $(\".expando-form .expando\");\r\n            var $expandoTrigger = $(\".expando-form .expando-trigger\");\r\n            var $expandoCheckbox = $(\".expando-form .expando-trigger input[type='checkbox']\");\r\n            $($expandoTrigger).click(function (e) {\r\n                var $target = $(e.target);\r\n                var isCheckbox = $target.is($expandoCheckbox);\r\n                $expandoForm.slideToggle();\r\n                if (!isCheckbox) {\r\n                    e.stopPropagation();\r\n                    e.preventDefault();\r\n                    if ($($expandoCheckbox).is(':checked')) {\r\n                        $($expandoCheckbox).prop(\"checked\", false);\r\n                    } else {\r\n                        $($expandoCheckbox).prop(\"checked\", true);\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        return ns;\r\n    }(window.EFTOURS.leadgen || {}));\r\n\r\n    return me;\r\n});\n"]}